// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buf/validate/validate.proto

package build.buf.validate;

public final class ValidateProto {
  private ValidateProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(build.buf.validate.ValidateProto.message);
    registry.add(build.buf.validate.ValidateProto.oneof);
    registry.add(build.buf.validate.ValidateProto.field);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public static final int MESSAGE_FIELD_NUMBER = 51071;
  /**
   * <pre>
   * Rules specify the validations to be performed on this message. By default,
   * no validation is performed against a message.
   * </pre>
   *
   * <code>extend .google.protobuf.MessageOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.MessageOptions,
      build.buf.validate.MessageConstraints> message = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        build.buf.validate.MessageConstraints.class,
        build.buf.validate.MessageConstraints.getDefaultInstance());
  public static final int ONEOF_FIELD_NUMBER = 51071;
  /**
   * <pre>
   * Rules specify the validations to be performed on this oneof. By default,
   * no validation is performed against a oneof.
   * </pre>
   *
   * <code>extend .google.protobuf.OneofOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.OneofOptions,
      build.buf.validate.OneofConstraints> oneof = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        build.buf.validate.OneofConstraints.class,
        build.buf.validate.OneofConstraints.getDefaultInstance());
  public static final int FIELD_FIELD_NUMBER = 51071;
  /**
   * <pre>
   * Rules specify the validations to be performed on this field. By default,
   * no validation is performed against a field.
   * </pre>
   *
   * <code>extend .google.protobuf.FieldOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.FieldOptions,
      build.buf.validate.FieldConstraints> field = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        build.buf.validate.FieldConstraints.class,
        build.buf.validate.FieldConstraints.getDefaultInstance());
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_MessageConstraints_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_MessageConstraints_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_OneofConstraints_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_OneofConstraints_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_FieldConstraints_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_FieldConstraints_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_FloatRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_FloatRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_DoubleRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_DoubleRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_Int32Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_Int32Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_Int64Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_Int64Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_UInt32Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_UInt32Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_UInt64Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_UInt64Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_SInt32Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_SInt32Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_SInt64Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_SInt64Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_Fixed32Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_Fixed32Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_Fixed64Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_Fixed64Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_SFixed32Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_SFixed32Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_SFixed64Rules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_SFixed64Rules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_BoolRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_BoolRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_StringRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_StringRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_BytesRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_BytesRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_EnumRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_EnumRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_RepeatedRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_RepeatedRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_MapRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_MapRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_AnyRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_AnyRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_DurationRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_DurationRules_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buf_validate_TimestampRules_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buf_validate_TimestampRules_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033buf/validate/validate.proto\022\014buf.valid" +
      "ate\032\035buf/validate/expression.proto\032\037buf/" +
      "validate/priv/private.proto\032 google/prot" +
      "obuf/descriptor.proto\032\036google/protobuf/d" +
      "uration.proto\032\037google/protobuf/timestamp" +
      ".proto\"n\n\022MessageConstraints\022\037\n\010disabled" +
      "\030\001 \001(\010H\000R\010disabled\210\001\001\022*\n\003cel\030\003 \003(\0132\030.buf" +
      ".validate.ConstraintR\003celB\013\n\t_disabled\"@" +
      "\n\020OneofConstraints\022\037\n\010required\030\001 \001(\010H\000R\010" +
      "required\210\001\001B\013\n\t_required\"\365\t\n\020FieldConstr" +
      "aints\022*\n\003cel\030\027 \003(\0132\030.buf.validate.Constr" +
      "aintR\003cel\022\030\n\007skipped\030\030 \001(\010R\007skipped\022\032\n\010r" +
      "equired\030\031 \001(\010R\010required\022!\n\014ignore_empty\030" +
      "\032 \001(\010R\013ignoreEmpty\0220\n\005float\030\001 \001(\0132\030.buf." +
      "validate.FloatRulesH\000R\005float\0223\n\006double\030\002" +
      " \001(\0132\031.buf.validate.DoubleRulesH\000R\006doubl" +
      "e\0220\n\005int32\030\003 \001(\0132\030.buf.validate.Int32Rul" +
      "esH\000R\005int32\0220\n\005int64\030\004 \001(\0132\030.buf.validat" +
      "e.Int64RulesH\000R\005int64\0223\n\006uint32\030\005 \001(\0132\031." +
      "buf.validate.UInt32RulesH\000R\006uint32\0223\n\006ui" +
      "nt64\030\006 \001(\0132\031.buf.validate.UInt64RulesH\000R" +
      "\006uint64\0223\n\006sint32\030\007 \001(\0132\031.buf.validate.S" +
      "Int32RulesH\000R\006sint32\0223\n\006sint64\030\010 \001(\0132\031.b" +
      "uf.validate.SInt64RulesH\000R\006sint64\0226\n\007fix" +
      "ed32\030\t \001(\0132\032.buf.validate.Fixed32RulesH\000" +
      "R\007fixed32\0226\n\007fixed64\030\n \001(\0132\032.buf.validat" +
      "e.Fixed64RulesH\000R\007fixed64\0229\n\010sfixed32\030\013 " +
      "\001(\0132\033.buf.validate.SFixed32RulesH\000R\010sfix" +
      "ed32\0229\n\010sfixed64\030\014 \001(\0132\033.buf.validate.SF" +
      "ixed64RulesH\000R\010sfixed64\022-\n\004bool\030\r \001(\0132\027." +
      "buf.validate.BoolRulesH\000R\004bool\0223\n\006string" +
      "\030\016 \001(\0132\031.buf.validate.StringRulesH\000R\006str" +
      "ing\0220\n\005bytes\030\017 \001(\0132\030.buf.validate.BytesR" +
      "ulesH\000R\005bytes\022-\n\004enum\030\020 \001(\0132\027.buf.valida" +
      "te.EnumRulesH\000R\004enum\0229\n\010repeated\030\022 \001(\0132\033" +
      ".buf.validate.RepeatedRulesH\000R\010repeated\022" +
      "*\n\003map\030\023 \001(\0132\026.buf.validate.MapRulesH\000R\003" +
      "map\022*\n\003any\030\024 \001(\0132\026.buf.validate.AnyRules" +
      "H\000R\003any\0229\n\010duration\030\025 \001(\0132\033.buf.validate" +
      ".DurationRulesH\000R\010duration\022<\n\ttimestamp\030" +
      "\026 \001(\0132\034.buf.validate.TimestampRulesH\000R\tt" +
      "imestampB\006\n\004type\"\366\024\n\nFloatRules\022v\n\005const" +
      "\030\001 \001(\002B[\202\370\030W\nU\n\013float.const\032Fthis != rul" +
      "es.const ? \'value must equal %s\'.format(" +
      "[rules.const]) : \'\'H\000R\005const\210\001\001\022\222\001\n\002lt\030\002" +
      " \001(\002B}\202\370\030y\nw\n\010float.lt\032k!has(rules.gte) " +
      "&& !has(rules.gt) && this >= rules.lt? \'" +
      "value must be less than %s\'.format([rule" +
      "s.lt]) : \'\'H\001R\002lt\210\001\001\022\245\001\n\003lte\030\003 \001(\002B\215\001\202\370\030" +
      "\210\001\n\205\001\n\tfloat.lte\032x!has(rules.gte) && !ha" +
      "s(rules.gt) && this > rules.lte? \'value " +
      "must be less than or equal to %s\'.format" +
      "([rules.lte]) : \'\'H\002R\003lte\210\001\001\022\237\007\n\002gt\030\004 \001(" +
      "\002B\211\007\202\370\030\204\007\nz\n\010float.gt\032n!has(rules.lt) &&" +
      " !has(rules.lte) && this <= rules.gt? \'v" +
      "alue must be greater than %s\'.format([ru" +
      "les.gt]) : \'\'\n\263\001\n\013float.gt_lt\032\243\001has(rule" +
      "s.lt) && rules.lt >= rules.gt && (this >" +
      "= rules.lt || this <= rules.gt)? \'value " +
      "must be greater than %s and less than %s" +
      "\'.format([rules.gt, rules.lt]) : \'\'\n\273\001\n\025" +
      "float.gt_lt_exclusive\032\241\001has(rules.lt) &&" +
      " rules.lt < rules.gt && (rules.lt <= thi" +
      "s && this <= rules.gt)? \'value must be g" +
      "reater than %s or less than %s\'.format([" +
      "rules.gt, rules.lt]) : \'\'\n\303\001\n\014float.gt_l" +
      "te\032\262\001has(rules.lte) && rules.lte >= rule" +
      "s.gt && (this > rules.lte || this <= rul" +
      "es.gt)? \'value must be greater than %s a" +
      "nd less than or equal to %s\'.format([rul" +
      "es.gt, rules.lte]) : \'\'\n\313\001\n\026float.gt_lte" +
      "_exclusive\032\260\001has(rules.lte) && rules.lte" +
      " < rules.gt && (rules.lte < this && this" +
      " <= rules.gt)? \'value must be greater th" +
      "an %s or less than or equal to %s\'.forma" +
      "t([rules.gt, rules.lte]) : \'\'H\003R\002gt\210\001\001\022\354" +
      "\007\n\003gte\030\005 \001(\002B\324\007\202\370\030\317\007\n\210\001\n\tfloat.gte\032{!has" +
      "(rules.lt) && !has(rules.lte) && this < " +
      "rules.gte? \'value must be greater than o" +
      "r equal to %s\'.format([rules.gte]) : \'\'\n" +
      "\302\001\n\014float.gte_lt\032\261\001has(rules.lt) && rule" +
      "s.lt >= rules.gte && (this >= rules.lt |" +
      "| this < rules.gte)? \'value must be grea" +
      "ter than or equal to %s and less than %s" +
      "\'.format([rules.gte, rules.lt]) : \'\'\n\312\001\n" +
      "\026float.gte_lt_exclusive\032\257\001has(rules.lt) " +
      "&& rules.lt < rules.gte && (rules.lt <= " +
      "this && this < rules.gte)? \'value must b" +
      "e greater than or equal to %s or less th" +
      "an %s\'.format([rules.gte, rules.lt]) : \'" +
      "\'\n\322\001\n\rfloat.gte_lte\032\300\001has(rules.lte) && " +
      "rules.lte >= rules.gte && (this > rules." +
      "lte || this < rules.gte)? \'value must be" +
      " greater than or equal to %s and less th" +
      "an or equal to %s\'.format([rules.gte, ru" +
      "les.lte]) : \'\'\n\332\001\n\027float.gte_lte_exclusi" +
      "ve\032\276\001has(rules.lte) && rules.lte < rules" +
      ".gte && (rules.lte < this && this < rule" +
      "s.gte)? \'value must be greater than or e" +
      "qual to %s or less than or equal to %s\'." +
      "format([rules.gte, rules.lte]) : \'\'H\004R\003g" +
      "te\210\001\001\022z\n\002in\030\006 \003(\002Bj\202\370\030f\nd\n\010float.in\032X!(t" +
      "his in dyn(rules)[\'in\']) ? \'value must b" +
      "e in list %s\'.format([dyn(rules)[\'in\']])" +
      " : \'\'R\002in\022~\n\006not_in\030\007 \003(\002Bg\202\370\030c\na\n\014float" +
      ".not_in\032Qthis in rules.not_in ? \'value m" +
      "ust not be in list %s\'.format([rules.not" +
      "_in]) : \'\'R\005notInB\010\n\006_constB\005\n\003_ltB\006\n\004_l" +
      "teB\005\n\003_gtB\006\n\004_gte\"\206\025\n\013DoubleRules\022w\n\005con" +
      "st\030\001 \001(\001B\\\202\370\030X\nV\n\014double.const\032Fthis != " +
      "rules.const ? \'value must equal %s\'.form" +
      "at([rules.const]) : \'\'H\000R\005const\210\001\001\022\223\001\n\002l" +
      "t\030\002 \001(\001B~\202\370\030z\nx\n\tdouble.lt\032k!has(rules.g" +
      "te) && !has(rules.gt) && this >= rules.l" +
      "t? \'value must be less than %s\'.format([" +
      "rules.lt]) : \'\'H\001R\002lt\210\001\001\022\246\001\n\003lte\030\003 \001(\001B\216" +
      "\001\202\370\030\211\001\n\206\001\n\ndouble.lte\032x!has(rules.gte) &" +
      "& !has(rules.gt) && this > rules.lte? \'v" +
      "alue must be less than or equal to %s\'.f" +
      "ormat([rules.lte]) : \'\'H\002R\003lte\210\001\001\022\244\007\n\002gt" +
      "\030\004 \001(\001B\216\007\202\370\030\211\007\n{\n\tdouble.gt\032n!has(rules." +
      "lt) && !has(rules.lte) && this <= rules." +
      "gt? \'value must be greater than %s\'.form" +
      "at([rules.gt]) : \'\'\n\264\001\n\014double.gt_lt\032\243\001h" +
      "as(rules.lt) && rules.lt >= rules.gt && " +
      "(this >= rules.lt || this <= rules.gt)? " +
      "\'value must be greater than %s and less " +
      "than %s\'.format([rules.gt, rules.lt]) : " +
      "\'\'\n\274\001\n\026double.gt_lt_exclusive\032\241\001has(rule" +
      "s.lt) && rules.lt < rules.gt && (rules.l" +
      "t <= this && this <= rules.gt)? \'value m" +
      "ust be greater than %s or less than %s\'." +
      "format([rules.gt, rules.lt]) : \'\'\n\304\001\n\rdo" +
      "uble.gt_lte\032\262\001has(rules.lte) && rules.lt" +
      "e >= rules.gt && (this > rules.lte || th" +
      "is <= rules.gt)? \'value must be greater " +
      "than %s and less than or equal to %s\'.fo" +
      "rmat([rules.gt, rules.lte]) : \'\'\n\314\001\n\027dou" +
      "ble.gt_lte_exclusive\032\260\001has(rules.lte) &&" +
      " rules.lte < rules.gt && (rules.lte < th" +
      "is && this <= rules.gt)? \'value must be " +
      "greater than %s or less than or equal to" +
      " %s\'.format([rules.gt, rules.lte]) : \'\'H" +
      "\003R\002gt\210\001\001\022\361\007\n\003gte\030\005 \001(\001B\331\007\202\370\030\324\007\n\211\001\n\ndoubl" +
      "e.gte\032{!has(rules.lt) && !has(rules.lte)" +
      " && this < rules.gte? \'value must be gre" +
      "ater than or equal to %s\'.format([rules." +
      "gte]) : \'\'\n\303\001\n\rdouble.gte_lt\032\261\001has(rules" +
      ".lt) && rules.lt >= rules.gte && (this >" +
      "= rules.lt || this < rules.gte)? \'value " +
      "must be greater than or equal to %s and " +
      "less than %s\'.format([rules.gte, rules.l" +
      "t]) : \'\'\n\313\001\n\027double.gte_lt_exclusive\032\257\001h" +
      "as(rules.lt) && rules.lt < rules.gte && " +
      "(rules.lt <= this && this < rules.gte)? " +
      "\'value must be greater than or equal to " +
      "%s or less than %s\'.format([rules.gte, r" +
      "ules.lt]) : \'\'\n\323\001\n\016double.gte_lte\032\300\001has(" +
      "rules.lte) && rules.lte >= rules.gte && " +
      "(this > rules.lte || this < rules.gte)? " +
      "\'value must be greater than or equal to " +
      "%s and less than or equal to %s\'.format(" +
      "[rules.gte, rules.lte]) : \'\'\n\333\001\n\030double." +
      "gte_lte_exclusive\032\276\001has(rules.lte) && ru" +
      "les.lte < rules.gte && (rules.lte < this" +
      " && this < rules.gte)? \'value must be gr" +
      "eater than or equal to %s or less than o" +
      "r equal to %s\'.format([rules.gte, rules." +
      "lte]) : \'\'H\004R\003gte\210\001\001\022{\n\002in\030\006 \003(\001Bk\202\370\030g\ne" +
      "\n\tdouble.in\032X!(this in dyn(rules)[\'in\'])" +
      " ? \'value must be in list %s\'.format([dy" +
      "n(rules)[\'in\']]) : \'\'R\002in\022\177\n\006not_in\030\007 \003(" +
      "\001Bh\202\370\030d\nb\n\rdouble.not_in\032Qthis in rules." +
      "not_in ? \'value must not be in list %s\'." +
      "format([rules.not_in]) : \'\'R\005notInB\010\n\006_c" +
      "onstB\005\n\003_ltB\006\n\004_lteB\005\n\003_gtB\006\n\004_gte\"\366\024\n\nI" +
      "nt32Rules\022v\n\005const\030\001 \001(\005B[\202\370\030W\nU\n\013int32." +
      "const\032Fthis != rules.const ? \'value must" +
      " equal %s\'.format([rules.const]) : \'\'H\000R" +
      "\005const\210\001\001\022\222\001\n\002lt\030\002 \001(\005B}\202\370\030y\nw\n\010int32.lt" +
      "\032k!has(rules.gte) && !has(rules.gt) && t" +
      "his >= rules.lt? \'value must be less tha" +
      "n %s\'.format([rules.lt]) : \'\'H\001R\002lt\210\001\001\022\245" +
      "\001\n\003lte\030\003 \001(\005B\215\001\202\370\030\210\001\n\205\001\n\tint32.lte\032x!has" +
      "(rules.gte) && !has(rules.gt) && this > " +
      "rules.lte? \'value must be less than or e" +
      "qual to %s\'.format([rules.lte]) : \'\'H\002R\003" +
      "lte\210\001\001\022\237\007\n\002gt\030\004 \001(\005B\211\007\202\370\030\204\007\nz\n\010int32.gt\032" +
      "n!has(rules.lt) && !has(rules.lte) && th" +
      "is <= rules.gt? \'value must be greater t" +
      "han %s\'.format([rules.gt]) : \'\'\n\263\001\n\013int3" +
      "2.gt_lt\032\243\001has(rules.lt) && rules.lt >= r" +
      "ules.gt && (this >= rules.lt || this <= " +
      "rules.gt)? \'value must be greater than %" +
      "s and less than %s\'.format([rules.gt, ru" +
      "les.lt]) : \'\'\n\273\001\n\025int32.gt_lt_exclusive\032" +
      "\241\001has(rules.lt) && rules.lt < rules.gt &" +
      "& (rules.lt <= this && this <= rules.gt)" +
      "? \'value must be greater than %s or less" +
      " than %s\'.format([rules.gt, rules.lt]) :" +
      " \'\'\n\303\001\n\014int32.gt_lte\032\262\001has(rules.lte) &&" +
      " rules.lte >= rules.gt && (this > rules." +
      "lte || this <= rules.gt)? \'value must be" +
      " greater than %s and less than or equal " +
      "to %s\'.format([rules.gt, rules.lte]) : \'" +
      "\'\n\313\001\n\026int32.gt_lte_exclusive\032\260\001has(rules" +
      ".lte) && rules.lte < rules.gt && (rules." +
      "lte < this && this <= rules.gt)? \'value " +
      "must be greater than %s or less than or " +
      "equal to %s\'.format([rules.gt, rules.lte" +
      "]) : \'\'H\003R\002gt\210\001\001\022\354\007\n\003gte\030\005 \001(\005B\324\007\202\370\030\317\007\n\210" +
      "\001\n\tint32.gte\032{!has(rules.lt) && !has(rul" +
      "es.lte) && this < rules.gte? \'value must" +
      " be greater than or equal to %s\'.format(" +
      "[rules.gte]) : \'\'\n\302\001\n\014int32.gte_lt\032\261\001has" +
      "(rules.lt) && rules.lt >= rules.gte && (" +
      "this >= rules.lt || this < rules.gte)? \'" +
      "value must be greater than or equal to %" +
      "s and less than %s\'.format([rules.gte, r" +
      "ules.lt]) : \'\'\n\312\001\n\026int32.gte_lt_exclusiv" +
      "e\032\257\001has(rules.lt) && rules.lt < rules.gt" +
      "e && (rules.lt <= this && this < rules.g" +
      "te)? \'value must be greater than or equa" +
      "l to %s or less than %s\'.format([rules.g" +
      "te, rules.lt]) : \'\'\n\322\001\n\rint32.gte_lte\032\300\001" +
      "has(rules.lte) && rules.lte >= rules.gte" +
      " && (this > rules.lte || this < rules.gt" +
      "e)? \'value must be greater than or equal" +
      " to %s and less than or equal to %s\'.for" +
      "mat([rules.gte, rules.lte]) : \'\'\n\332\001\n\027int" +
      "32.gte_lte_exclusive\032\276\001has(rules.lte) &&" +
      " rules.lte < rules.gte && (rules.lte < t" +
      "his && this < rules.gte)? \'value must be" +
      " greater than or equal to %s or less tha" +
      "n or equal to %s\'.format([rules.gte, rul" +
      "es.lte]) : \'\'H\004R\003gte\210\001\001\022z\n\002in\030\006 \003(\005Bj\202\370\030" +
      "f\nd\n\010int32.in\032X!(this in dyn(rules)[\'in\'" +
      "]) ? \'value must be in list %s\'.format([" +
      "dyn(rules)[\'in\']]) : \'\'R\002in\022~\n\006not_in\030\007 " +
      "\003(\005Bg\202\370\030c\na\n\014int32.not_in\032Qthis in rules" +
      ".not_in ? \'value must not be in list %s\'" +
      ".format([rules.not_in]) : \'\'R\005notInB\010\n\006_" +
      "constB\005\n\003_ltB\006\n\004_lteB\005\n\003_gtB\006\n\004_gte\"\366\024\n\n" +
      "Int64Rules\022v\n\005const\030\001 \001(\003B[\202\370\030W\nU\n\013int64" +
      ".const\032Fthis != rules.const ? \'value mus" +
      "t equal %s\'.format([rules.const]) : \'\'H\000" +
      "R\005const\210\001\001\022\222\001\n\002lt\030\002 \001(\003B}\202\370\030y\nw\n\010int64.l" +
      "t\032k!has(rules.gte) && !has(rules.gt) && " +
      "this >= rules.lt? \'value must be less th" +
      "an %s\'.format([rules.lt]) : \'\'H\001R\002lt\210\001\001\022" +
      "\245\001\n\003lte\030\003 \001(\003B\215\001\202\370\030\210\001\n\205\001\n\tint64.lte\032x!ha" +
      "s(rules.gte) && !has(rules.gt) && this >" +
      " rules.lte? \'value must be less than or " +
      "equal to %s\'.format([rules.lte]) : \'\'H\002R" +
      "\003lte\210\001\001\022\237\007\n\002gt\030\004 \001(\003B\211\007\202\370\030\204\007\nz\n\010int64.gt" +
      "\032n!has(rules.lt) && !has(rules.lte) && t" +
      "his <= rules.gt? \'value must be greater " +
      "than %s\'.format([rules.gt]) : \'\'\n\263\001\n\013int" +
      "64.gt_lt\032\243\001has(rules.lt) && rules.lt >= " +
      "rules.gt && (this >= rules.lt || this <=" +
      " rules.gt)? \'value must be greater than " +
      "%s and less than %s\'.format([rules.gt, r" +
      "ules.lt]) : \'\'\n\273\001\n\025int64.gt_lt_exclusive" +
      "\032\241\001has(rules.lt) && rules.lt < rules.gt " +
      "&& (rules.lt <= this && this <= rules.gt" +
      ")? \'value must be greater than %s or les" +
      "s than %s\'.format([rules.gt, rules.lt]) " +
      ": \'\'\n\303\001\n\014int64.gt_lte\032\262\001has(rules.lte) &" +
      "& rules.lte >= rules.gt && (this > rules" +
      ".lte || this <= rules.gt)? \'value must b" +
      "e greater than %s and less than or equal" +
      " to %s\'.format([rules.gt, rules.lte]) : " +
      "\'\'\n\313\001\n\026int64.gt_lte_exclusive\032\260\001has(rule" +
      "s.lte) && rules.lte < rules.gt && (rules" +
      ".lte < this && this <= rules.gt)? \'value" +
      " must be greater than %s or less than or" +
      " equal to %s\'.format([rules.gt, rules.lt" +
      "e]) : \'\'H\003R\002gt\210\001\001\022\354\007\n\003gte\030\005 \001(\003B\324\007\202\370\030\317\007\n" +
      "\210\001\n\tint64.gte\032{!has(rules.lt) && !has(ru" +
      "les.lte) && this < rules.gte? \'value mus" +
      "t be greater than or equal to %s\'.format" +
      "([rules.gte]) : \'\'\n\302\001\n\014int64.gte_lt\032\261\001ha" +
      "s(rules.lt) && rules.lt >= rules.gte && " +
      "(this >= rules.lt || this < rules.gte)? " +
      "\'value must be greater than or equal to " +
      "%s and less than %s\'.format([rules.gte, " +
      "rules.lt]) : \'\'\n\312\001\n\026int64.gte_lt_exclusi" +
      "ve\032\257\001has(rules.lt) && rules.lt < rules.g" +
      "te && (rules.lt <= this && this < rules." +
      "gte)? \'value must be greater than or equ" +
      "al to %s or less than %s\'.format([rules." +
      "gte, rules.lt]) : \'\'\n\322\001\n\rint64.gte_lte\032\300" +
      "\001has(rules.lte) && rules.lte >= rules.gt" +
      "e && (this > rules.lte || this < rules.g" +
      "te)? \'value must be greater than or equa" +
      "l to %s and less than or equal to %s\'.fo" +
      "rmat([rules.gte, rules.lte]) : \'\'\n\332\001\n\027in" +
      "t64.gte_lte_exclusive\032\276\001has(rules.lte) &" +
      "& rules.lte < rules.gte && (rules.lte < " +
      "this && this < rules.gte)? \'value must b" +
      "e greater than or equal to %s or less th" +
      "an or equal to %s\'.format([rules.gte, ru" +
      "les.lte]) : \'\'H\004R\003gte\210\001\001\022z\n\002in\030\006 \003(\003Bj\202\370" +
      "\030f\nd\n\010int64.in\032X!(this in dyn(rules)[\'in" +
      "\']) ? \'value must be in list %s\'.format(" +
      "[dyn(rules)[\'in\']]) : \'\'R\002in\022~\n\006not_in\030\007" +
      " \003(\003Bg\202\370\030c\na\n\014int64.not_in\032Qthis in rule" +
      "s.not_in ? \'value must not be in list %s" +
      "\'.format([rules.not_in]) : \'\'R\005notInB\010\n\006" +
      "_constB\005\n\003_ltB\006\n\004_lteB\005\n\003_gtB\006\n\004_gte\"\206\025\n" +
      "\013UInt32Rules\022w\n\005const\030\001 \001(\rB\\\202\370\030X\nV\n\014uin" +
      "t32.const\032Fthis != rules.const ? \'value " +
      "must equal %s\'.format([rules.const]) : \'" +
      "\'H\000R\005const\210\001\001\022\223\001\n\002lt\030\002 \001(\rB~\202\370\030z\nx\n\tuint" +
      "32.lt\032k!has(rules.gte) && !has(rules.gt)" +
      " && this >= rules.lt? \'value must be les" +
      "s than %s\'.format([rules.lt]) : \'\'H\001R\002lt" +
      "\210\001\001\022\246\001\n\003lte\030\003 \001(\rB\216\001\202\370\030\211\001\n\206\001\n\nuint32.lte" +
      "\032x!has(rules.gte) && !has(rules.gt) && t" +
      "his > rules.lte? \'value must be less tha" +
      "n or equal to %s\'.format([rules.lte]) : " +
      "\'\'H\002R\003lte\210\001\001\022\244\007\n\002gt\030\004 \001(\rB\216\007\202\370\030\211\007\n{\n\tuin" +
      "t32.gt\032n!has(rules.lt) && !has(rules.lte" +
      ") && this <= rules.gt? \'value must be gr" +
      "eater than %s\'.format([rules.gt]) : \'\'\n\264" +
      "\001\n\014uint32.gt_lt\032\243\001has(rules.lt) && rules" +
      ".lt >= rules.gt && (this >= rules.lt || " +
      "this <= rules.gt)? \'value must be greate" +
      "r than %s and less than %s\'.format([rule" +
      "s.gt, rules.lt]) : \'\'\n\274\001\n\026uint32.gt_lt_e" +
      "xclusive\032\241\001has(rules.lt) && rules.lt < r" +
      "ules.gt && (rules.lt <= this && this <= " +
      "rules.gt)? \'value must be greater than %" +
      "s or less than %s\'.format([rules.gt, rul" +
      "es.lt]) : \'\'\n\304\001\n\ruint32.gt_lte\032\262\001has(rul" +
      "es.lte) && rules.lte >= rules.gt && (thi" +
      "s > rules.lte || this <= rules.gt)? \'val" +
      "ue must be greater than %s and less than" +
      " or equal to %s\'.format([rules.gt, rules" +
      ".lte]) : \'\'\n\314\001\n\027uint32.gt_lte_exclusive\032" +
      "\260\001has(rules.lte) && rules.lte < rules.gt" +
      " && (rules.lte < this && this <= rules.g" +
      "t)? \'value must be greater than %s or le" +
      "ss than or equal to %s\'.format([rules.gt" +
      ", rules.lte]) : \'\'H\003R\002gt\210\001\001\022\361\007\n\003gte\030\005 \001(" +
      "\rB\331\007\202\370\030\324\007\n\211\001\n\nuint32.gte\032{!has(rules.lt)" +
      " && !has(rules.lte) && this < rules.gte?" +
      " \'value must be greater than or equal to" +
      " %s\'.format([rules.gte]) : \'\'\n\303\001\n\ruint32" +
      ".gte_lt\032\261\001has(rules.lt) && rules.lt >= r" +
      "ules.gte && (this >= rules.lt || this < " +
      "rules.gte)? \'value must be greater than " +
      "or equal to %s and less than %s\'.format(" +
      "[rules.gte, rules.lt]) : \'\'\n\313\001\n\027uint32.g" +
      "te_lt_exclusive\032\257\001has(rules.lt) && rules" +
      ".lt < rules.gte && (rules.lt <= this && " +
      "this < rules.gte)? \'value must be greate" +
      "r than or equal to %s or less than %s\'.f" +
      "ormat([rules.gte, rules.lt]) : \'\'\n\323\001\n\016ui" +
      "nt32.gte_lte\032\300\001has(rules.lte) && rules.l" +
      "te >= rules.gte && (this > rules.lte || " +
      "this < rules.gte)? \'value must be greate" +
      "r than or equal to %s and less than or e" +
      "qual to %s\'.format([rules.gte, rules.lte" +
      "]) : \'\'\n\333\001\n\030uint32.gte_lte_exclusive\032\276\001h" +
      "as(rules.lte) && rules.lte < rules.gte &" +
      "& (rules.lte < this && this < rules.gte)" +
      "? \'value must be greater than or equal t" +
      "o %s or less than or equal to %s\'.format" +
      "([rules.gte, rules.lte]) : \'\'H\004R\003gte\210\001\001\022" +
      "{\n\002in\030\006 \003(\rBk\202\370\030g\ne\n\tuint32.in\032X!(this i" +
      "n dyn(rules)[\'in\']) ? \'value must be in " +
      "list %s\'.format([dyn(rules)[\'in\']]) : \'\'" +
      "R\002in\022\177\n\006not_in\030\007 \003(\rBh\202\370\030d\nb\n\ruint32.not" +
      "_in\032Qthis in rules.not_in ? \'value must " +
      "not be in list %s\'.format([rules.not_in]" +
      ") : \'\'R\005notInB\010\n\006_constB\005\n\003_ltB\006\n\004_lteB\005" +
      "\n\003_gtB\006\n\004_gte\"\206\025\n\013UInt64Rules\022w\n\005const\030\001" +
      " \001(\004B\\\202\370\030X\nV\n\014uint64.const\032Fthis != rule" +
      "s.const ? \'value must equal %s\'.format([" +
      "rules.const]) : \'\'H\000R\005const\210\001\001\022\223\001\n\002lt\030\002 " +
      "\001(\004B~\202\370\030z\nx\n\tuint64.lt\032k!has(rules.gte) " +
      "&& !has(rules.gt) && this >= rules.lt? \'" +
      "value must be less than %s\'.format([rule" +
      "s.lt]) : \'\'H\001R\002lt\210\001\001\022\246\001\n\003lte\030\003 \001(\004B\216\001\202\370\030" +
      "\211\001\n\206\001\n\nuint64.lte\032x!has(rules.gte) && !h" +
      "as(rules.gt) && this > rules.lte? \'value" +
      " must be less than or equal to %s\'.forma" +
      "t([rules.lte]) : \'\'H\002R\003lte\210\001\001\022\244\007\n\002gt\030\004 \001" +
      "(\004B\216\007\202\370\030\211\007\n{\n\tuint64.gt\032n!has(rules.lt) " +
      "&& !has(rules.lte) && this <= rules.gt? " +
      "\'value must be greater than %s\'.format([" +
      "rules.gt]) : \'\'\n\264\001\n\014uint64.gt_lt\032\243\001has(r" +
      "ules.lt) && rules.lt >= rules.gt && (thi" +
      "s >= rules.lt || this <= rules.gt)? \'val" +
      "ue must be greater than %s and less than" +
      " %s\'.format([rules.gt, rules.lt]) : \'\'\n\274" +
      "\001\n\026uint64.gt_lt_exclusive\032\241\001has(rules.lt" +
      ") && rules.lt < rules.gt && (rules.lt <=" +
      " this && this <= rules.gt)? \'value must ",
      "be greater than %s or less than %s\'.form" +
      "at([rules.gt, rules.lt]) : \'\'\n\304\001\n\ruint64" +
      ".gt_lte\032\262\001has(rules.lte) && rules.lte >=" +
      " rules.gt && (this > rules.lte || this <" +
      "= rules.gt)? \'value must be greater than" +
      " %s and less than or equal to %s\'.format" +
      "([rules.gt, rules.lte]) : \'\'\n\314\001\n\027uint64." +
      "gt_lte_exclusive\032\260\001has(rules.lte) && rul" +
      "es.lte < rules.gt && (rules.lte < this &" +
      "& this <= rules.gt)? \'value must be grea" +
      "ter than %s or less than or equal to %s\'" +
      ".format([rules.gt, rules.lte]) : \'\'H\003R\002g" +
      "t\210\001\001\022\361\007\n\003gte\030\005 \001(\004B\331\007\202\370\030\324\007\n\211\001\n\nuint64.gt" +
      "e\032{!has(rules.lt) && !has(rules.lte) && " +
      "this < rules.gte? \'value must be greater" +
      " than or equal to %s\'.format([rules.gte]" +
      ") : \'\'\n\303\001\n\ruint64.gte_lt\032\261\001has(rules.lt)" +
      " && rules.lt >= rules.gte && (this >= ru" +
      "les.lt || this < rules.gte)? \'value must" +
      " be greater than or equal to %s and less" +
      " than %s\'.format([rules.gte, rules.lt]) " +
      ": \'\'\n\313\001\n\027uint64.gte_lt_exclusive\032\257\001has(r" +
      "ules.lt) && rules.lt < rules.gte && (rul" +
      "es.lt <= this && this < rules.gte)? \'val" +
      "ue must be greater than or equal to %s o" +
      "r less than %s\'.format([rules.gte, rules" +
      ".lt]) : \'\'\n\323\001\n\016uint64.gte_lte\032\300\001has(rule" +
      "s.lte) && rules.lte >= rules.gte && (thi" +
      "s > rules.lte || this < rules.gte)? \'val" +
      "ue must be greater than or equal to %s a" +
      "nd less than or equal to %s\'.format([rul" +
      "es.gte, rules.lte]) : \'\'\n\333\001\n\030uint64.gte_" +
      "lte_exclusive\032\276\001has(rules.lte) && rules." +
      "lte < rules.gte && (rules.lte < this && " +
      "this < rules.gte)? \'value must be greate" +
      "r than or equal to %s or less than or eq" +
      "ual to %s\'.format([rules.gte, rules.lte]" +
      ") : \'\'H\004R\003gte\210\001\001\022{\n\002in\030\006 \003(\004Bk\202\370\030g\ne\n\tui" +
      "nt64.in\032X!(this in dyn(rules)[\'in\']) ? \'" +
      "value must be in list %s\'.format([dyn(ru" +
      "les)[\'in\']]) : \'\'R\002in\022\177\n\006not_in\030\007 \003(\004Bh\202" +
      "\370\030d\nb\n\ruint64.not_in\032Qthis in rules.not_" +
      "in ? \'value must not be in list %s\'.form" +
      "at([rules.not_in]) : \'\'R\005notInB\010\n\006_const" +
      "B\005\n\003_ltB\006\n\004_lteB\005\n\003_gtB\006\n\004_gte\"\206\025\n\013SInt3" +
      "2Rules\022w\n\005const\030\001 \001(\021B\\\202\370\030X\nV\n\014sint32.co" +
      "nst\032Fthis != rules.const ? \'value must e" +
      "qual %s\'.format([rules.const]) : \'\'H\000R\005c" +
      "onst\210\001\001\022\223\001\n\002lt\030\002 \001(\021B~\202\370\030z\nx\n\tsint32.lt\032" +
      "k!has(rules.gte) && !has(rules.gt) && th" +
      "is >= rules.lt? \'value must be less than" +
      " %s\'.format([rules.lt]) : \'\'H\001R\002lt\210\001\001\022\246\001" +
      "\n\003lte\030\003 \001(\021B\216\001\202\370\030\211\001\n\206\001\n\nsint32.lte\032x!has" +
      "(rules.gte) && !has(rules.gt) && this > " +
      "rules.lte? \'value must be less than or e" +
      "qual to %s\'.format([rules.lte]) : \'\'H\002R\003" +
      "lte\210\001\001\022\244\007\n\002gt\030\004 \001(\021B\216\007\202\370\030\211\007\n{\n\tsint32.gt" +
      "\032n!has(rules.lt) && !has(rules.lte) && t" +
      "his <= rules.gt? \'value must be greater " +
      "than %s\'.format([rules.gt]) : \'\'\n\264\001\n\014sin" +
      "t32.gt_lt\032\243\001has(rules.lt) && rules.lt >=" +
      " rules.gt && (this >= rules.lt || this <" +
      "= rules.gt)? \'value must be greater than" +
      " %s and less than %s\'.format([rules.gt, " +
      "rules.lt]) : \'\'\n\274\001\n\026sint32.gt_lt_exclusi" +
      "ve\032\241\001has(rules.lt) && rules.lt < rules.g" +
      "t && (rules.lt <= this && this <= rules." +
      "gt)? \'value must be greater than %s or l" +
      "ess than %s\'.format([rules.gt, rules.lt]" +
      ") : \'\'\n\304\001\n\rsint32.gt_lte\032\262\001has(rules.lte" +
      ") && rules.lte >= rules.gt && (this > ru" +
      "les.lte || this <= rules.gt)? \'value mus" +
      "t be greater than %s and less than or eq" +
      "ual to %s\'.format([rules.gt, rules.lte])" +
      " : \'\'\n\314\001\n\027sint32.gt_lte_exclusive\032\260\001has(" +
      "rules.lte) && rules.lte < rules.gt && (r" +
      "ules.lte < this && this <= rules.gt)? \'v" +
      "alue must be greater than %s or less tha" +
      "n or equal to %s\'.format([rules.gt, rule" +
      "s.lte]) : \'\'H\003R\002gt\210\001\001\022\361\007\n\003gte\030\005 \001(\021B\331\007\202\370" +
      "\030\324\007\n\211\001\n\nsint32.gte\032{!has(rules.lt) && !h" +
      "as(rules.lte) && this < rules.gte? \'valu" +
      "e must be greater than or equal to %s\'.f" +
      "ormat([rules.gte]) : \'\'\n\303\001\n\rsint32.gte_l" +
      "t\032\261\001has(rules.lt) && rules.lt >= rules.g" +
      "te && (this >= rules.lt || this < rules." +
      "gte)? \'value must be greater than or equ" +
      "al to %s and less than %s\'.format([rules" +
      ".gte, rules.lt]) : \'\'\n\313\001\n\027sint32.gte_lt_" +
      "exclusive\032\257\001has(rules.lt) && rules.lt < " +
      "rules.gte && (rules.lt <= this && this <" +
      " rules.gte)? \'value must be greater than" +
      " or equal to %s or less than %s\'.format(" +
      "[rules.gte, rules.lt]) : \'\'\n\323\001\n\016sint32.g" +
      "te_lte\032\300\001has(rules.lte) && rules.lte >= " +
      "rules.gte && (this > rules.lte || this <" +
      " rules.gte)? \'value must be greater than" +
      " or equal to %s and less than or equal t" +
      "o %s\'.format([rules.gte, rules.lte]) : \'" +
      "\'\n\333\001\n\030sint32.gte_lte_exclusive\032\276\001has(rul" +
      "es.lte) && rules.lte < rules.gte && (rul" +
      "es.lte < this && this < rules.gte)? \'val" +
      "ue must be greater than or equal to %s o" +
      "r less than or equal to %s\'.format([rule" +
      "s.gte, rules.lte]) : \'\'H\004R\003gte\210\001\001\022{\n\002in\030" +
      "\006 \003(\021Bk\202\370\030g\ne\n\tsint32.in\032X!(this in dyn(" +
      "rules)[\'in\']) ? \'value must be in list %" +
      "s\'.format([dyn(rules)[\'in\']]) : \'\'R\002in\022\177" +
      "\n\006not_in\030\007 \003(\021Bh\202\370\030d\nb\n\rsint32.not_in\032Qt" +
      "his in rules.not_in ? \'value must not be" +
      " in list %s\'.format([rules.not_in]) : \'\'" +
      "R\005notInB\010\n\006_constB\005\n\003_ltB\006\n\004_lteB\005\n\003_gtB" +
      "\006\n\004_gte\"\206\025\n\013SInt64Rules\022w\n\005const\030\001 \001(\022B\\" +
      "\202\370\030X\nV\n\014sint64.const\032Fthis != rules.cons" +
      "t ? \'value must equal %s\'.format([rules." +
      "const]) : \'\'H\000R\005const\210\001\001\022\223\001\n\002lt\030\002 \001(\022B~\202" +
      "\370\030z\nx\n\tsint64.lt\032k!has(rules.gte) && !ha" +
      "s(rules.gt) && this >= rules.lt? \'value " +
      "must be less than %s\'.format([rules.lt])" +
      " : \'\'H\001R\002lt\210\001\001\022\246\001\n\003lte\030\003 \001(\022B\216\001\202\370\030\211\001\n\206\001\n" +
      "\nsint64.lte\032x!has(rules.gte) && !has(rul" +
      "es.gt) && this > rules.lte? \'value must " +
      "be less than or equal to %s\'.format([rul" +
      "es.lte]) : \'\'H\002R\003lte\210\001\001\022\244\007\n\002gt\030\004 \001(\022B\216\007\202" +
      "\370\030\211\007\n{\n\tsint64.gt\032n!has(rules.lt) && !ha" +
      "s(rules.lte) && this <= rules.gt? \'value" +
      " must be greater than %s\'.format([rules." +
      "gt]) : \'\'\n\264\001\n\014sint64.gt_lt\032\243\001has(rules.l" +
      "t) && rules.lt >= rules.gt && (this >= r" +
      "ules.lt || this <= rules.gt)? \'value mus" +
      "t be greater than %s and less than %s\'.f" +
      "ormat([rules.gt, rules.lt]) : \'\'\n\274\001\n\026sin" +
      "t64.gt_lt_exclusive\032\241\001has(rules.lt) && r" +
      "ules.lt < rules.gt && (rules.lt <= this " +
      "&& this <= rules.gt)? \'value must be gre" +
      "ater than %s or less than %s\'.format([ru" +
      "les.gt, rules.lt]) : \'\'\n\304\001\n\rsint64.gt_lt" +
      "e\032\262\001has(rules.lte) && rules.lte >= rules" +
      ".gt && (this > rules.lte || this <= rule" +
      "s.gt)? \'value must be greater than %s an" +
      "d less than or equal to %s\'.format([rule" +
      "s.gt, rules.lte]) : \'\'\n\314\001\n\027sint64.gt_lte" +
      "_exclusive\032\260\001has(rules.lte) && rules.lte" +
      " < rules.gt && (rules.lte < this && this" +
      " <= rules.gt)? \'value must be greater th" +
      "an %s or less than or equal to %s\'.forma" +
      "t([rules.gt, rules.lte]) : \'\'H\003R\002gt\210\001\001\022\361" +
      "\007\n\003gte\030\005 \001(\022B\331\007\202\370\030\324\007\n\211\001\n\nsint64.gte\032{!ha" +
      "s(rules.lt) && !has(rules.lte) && this <" +
      " rules.gte? \'value must be greater than " +
      "or equal to %s\'.format([rules.gte]) : \'\'" +
      "\n\303\001\n\rsint64.gte_lt\032\261\001has(rules.lt) && ru" +
      "les.lt >= rules.gte && (this >= rules.lt" +
      " || this < rules.gte)? \'value must be gr" +
      "eater than or equal to %s and less than " +
      "%s\'.format([rules.gte, rules.lt]) : \'\'\n\313" +
      "\001\n\027sint64.gte_lt_exclusive\032\257\001has(rules.l" +
      "t) && rules.lt < rules.gte && (rules.lt " +
      "<= this && this < rules.gte)? \'value mus" +
      "t be greater than or equal to %s or less" +
      " than %s\'.format([rules.gte, rules.lt]) " +
      ": \'\'\n\323\001\n\016sint64.gte_lte\032\300\001has(rules.lte)" +
      " && rules.lte >= rules.gte && (this > ru" +
      "les.lte || this < rules.gte)? \'value mus" +
      "t be greater than or equal to %s and les" +
      "s than or equal to %s\'.format([rules.gte" +
      ", rules.lte]) : \'\'\n\333\001\n\030sint64.gte_lte_ex" +
      "clusive\032\276\001has(rules.lte) && rules.lte < " +
      "rules.gte && (rules.lte < this && this <" +
      " rules.gte)? \'value must be greater than" +
      " or equal to %s or less than or equal to" +
      " %s\'.format([rules.gte, rules.lte]) : \'\'" +
      "H\004R\003gte\210\001\001\022{\n\002in\030\006 \003(\022Bk\202\370\030g\ne\n\tsint64.i" +
      "n\032X!(this in dyn(rules)[\'in\']) ? \'value " +
      "must be in list %s\'.format([dyn(rules)[\'" +
      "in\']]) : \'\'R\002in\022\177\n\006not_in\030\007 \003(\022Bh\202\370\030d\nb\n" +
      "\rsint64.not_in\032Qthis in rules.not_in ? \'" +
      "value must not be in list %s\'.format([ru" +
      "les.not_in]) : \'\'R\005notInB\010\n\006_constB\005\n\003_l" +
      "tB\006\n\004_lteB\005\n\003_gtB\006\n\004_gte\"\227\025\n\014Fixed32Rule" +
      "s\022x\n\005const\030\001 \001(\007B]\202\370\030Y\nW\n\rfixed32.const\032" +
      "Fthis != rules.const ? \'value must equal" +
      " %s\'.format([rules.const]) : \'\'H\000R\005const" +
      "\210\001\001\022\224\001\n\002lt\030\002 \001(\007B\177\202\370\030{\ny\n\nfixed32.lt\032k!h" +
      "as(rules.gte) && !has(rules.gt) && this " +
      ">= rules.lt? \'value must be less than %s" +
      "\'.format([rules.lt]) : \'\'H\001R\002lt\210\001\001\022\247\001\n\003l" +
      "te\030\003 \001(\007B\217\001\202\370\030\212\001\n\207\001\n\013fixed32.lte\032x!has(r" +
      "ules.gte) && !has(rules.gt) && this > ru" +
      "les.lte? \'value must be less than or equ" +
      "al to %s\'.format([rules.lte]) : \'\'H\002R\003lt" +
      "e\210\001\001\022\251\007\n\002gt\030\004 \001(\007B\223\007\202\370\030\216\007\n|\n\nfixed32.gt\032" +
      "n!has(rules.lt) && !has(rules.lte) && th" +
      "is <= rules.gt? \'value must be greater t" +
      "han %s\'.format([rules.gt]) : \'\'\n\265\001\n\rfixe" +
      "d32.gt_lt\032\243\001has(rules.lt) && rules.lt >=" +
      " rules.gt && (this >= rules.lt || this <" +
      "= rules.gt)? \'value must be greater than" +
      " %s and less than %s\'.format([rules.gt, " +
      "rules.lt]) : \'\'\n\275\001\n\027fixed32.gt_lt_exclus" +
      "ive\032\241\001has(rules.lt) && rules.lt < rules." +
      "gt && (rules.lt <= this && this <= rules" +
      ".gt)? \'value must be greater than %s or " +
      "less than %s\'.format([rules.gt, rules.lt" +
      "]) : \'\'\n\305\001\n\016fixed32.gt_lte\032\262\001has(rules.l" +
      "te) && rules.lte >= rules.gt && (this > " +
      "rules.lte || this <= rules.gt)? \'value m" +
      "ust be greater than %s and less than or " +
      "equal to %s\'.format([rules.gt, rules.lte" +
      "]) : \'\'\n\315\001\n\030fixed32.gt_lte_exclusive\032\260\001h" +
      "as(rules.lte) && rules.lte < rules.gt &&" +
      " (rules.lte < this && this <= rules.gt)?" +
      " \'value must be greater than %s or less " +
      "than or equal to %s\'.format([rules.gt, r" +
      "ules.lte]) : \'\'H\003R\002gt\210\001\001\022\366\007\n\003gte\030\005 \001(\007B\336" +
      "\007\202\370\030\331\007\n\212\001\n\013fixed32.gte\032{!has(rules.lt) &" +
      "& !has(rules.lte) && this < rules.gte? \'" +
      "value must be greater than or equal to %" +
      "s\'.format([rules.gte]) : \'\'\n\304\001\n\016fixed32." +
      "gte_lt\032\261\001has(rules.lt) && rules.lt >= ru" +
      "les.gte && (this >= rules.lt || this < r" +
      "ules.gte)? \'value must be greater than o" +
      "r equal to %s and less than %s\'.format([" +
      "rules.gte, rules.lt]) : \'\'\n\314\001\n\030fixed32.g" +
      "te_lt_exclusive\032\257\001has(rules.lt) && rules" +
      ".lt < rules.gte && (rules.lt <= this && " +
      "this < rules.gte)? \'value must be greate" +
      "r than or equal to %s or less than %s\'.f" +
      "ormat([rules.gte, rules.lt]) : \'\'\n\324\001\n\017fi" +
      "xed32.gte_lte\032\300\001has(rules.lte) && rules." +
      "lte >= rules.gte && (this > rules.lte ||" +
      " this < rules.gte)? \'value must be great" +
      "er than or equal to %s and less than or " +
      "equal to %s\'.format([rules.gte, rules.lt" +
      "e]) : \'\'\n\334\001\n\031fixed32.gte_lte_exclusive\032\276" +
      "\001has(rules.lte) && rules.lte < rules.gte" +
      " && (rules.lte < this && this < rules.gt" +
      "e)? \'value must be greater than or equal" +
      " to %s or less than or equal to %s\'.form" +
      "at([rules.gte, rules.lte]) : \'\'H\004R\003gte\210\001" +
      "\001\022|\n\002in\030\006 \003(\007Bl\202\370\030h\nf\n\nfixed32.in\032X!(thi" +
      "s in dyn(rules)[\'in\']) ? \'value must be " +
      "in list %s\'.format([dyn(rules)[\'in\']]) :" +
      " \'\'R\002in\022\200\001\n\006not_in\030\007 \003(\007Bi\202\370\030e\nc\n\016fixed3" +
      "2.not_in\032Qthis in rules.not_in ? \'value " +
      "must not be in list %s\'.format([rules.no" +
      "t_in]) : \'\'R\005notInB\010\n\006_constB\005\n\003_ltB\006\n\004_" +
      "lteB\005\n\003_gtB\006\n\004_gte\"\227\025\n\014Fixed64Rules\022x\n\005c" +
      "onst\030\001 \001(\006B]\202\370\030Y\nW\n\rfixed64.const\032Fthis " +
      "!= rules.const ? \'value must equal %s\'.f" +
      "ormat([rules.const]) : \'\'H\000R\005const\210\001\001\022\224\001" +
      "\n\002lt\030\002 \001(\006B\177\202\370\030{\ny\n\nfixed64.lt\032k!has(rul" +
      "es.gte) && !has(rules.gt) && this >= rul" +
      "es.lt? \'value must be less than %s\'.form" +
      "at([rules.lt]) : \'\'H\001R\002lt\210\001\001\022\247\001\n\003lte\030\003 \001" +
      "(\006B\217\001\202\370\030\212\001\n\207\001\n\013fixed64.lte\032x!has(rules.g" +
      "te) && !has(rules.gt) && this > rules.lt" +
      "e? \'value must be less than or equal to " +
      "%s\'.format([rules.lte]) : \'\'H\002R\003lte\210\001\001\022\251" +
      "\007\n\002gt\030\004 \001(\006B\223\007\202\370\030\216\007\n|\n\nfixed64.gt\032n!has(" +
      "rules.lt) && !has(rules.lte) && this <= " +
      "rules.gt? \'value must be greater than %s" +
      "\'.format([rules.gt]) : \'\'\n\265\001\n\rfixed64.gt" +
      "_lt\032\243\001has(rules.lt) && rules.lt >= rules" +
      ".gt && (this >= rules.lt || this <= rule" +
      "s.gt)? \'value must be greater than %s an" +
      "d less than %s\'.format([rules.gt, rules." +
      "lt]) : \'\'\n\275\001\n\027fixed64.gt_lt_exclusive\032\241\001" +
      "has(rules.lt) && rules.lt < rules.gt && " +
      "(rules.lt <= this && this <= rules.gt)? " +
      "\'value must be greater than %s or less t" +
      "han %s\'.format([rules.gt, rules.lt]) : \'" +
      "\'\n\305\001\n\016fixed64.gt_lte\032\262\001has(rules.lte) &&" +
      " rules.lte >= rules.gt && (this > rules." +
      "lte || this <= rules.gt)? \'value must be" +
      " greater than %s and less than or equal " +
      "to %s\'.format([rules.gt, rules.lte]) : \'" +
      "\'\n\315\001\n\030fixed64.gt_lte_exclusive\032\260\001has(rul" +
      "es.lte) && rules.lte < rules.gt && (rule" +
      "s.lte < this && this <= rules.gt)? \'valu" +
      "e must be greater than %s or less than o" +
      "r equal to %s\'.format([rules.gt, rules.l" +
      "te]) : \'\'H\003R\002gt\210\001\001\022\366\007\n\003gte\030\005 \001(\006B\336\007\202\370\030\331\007" +
      "\n\212\001\n\013fixed64.gte\032{!has(rules.lt) && !has" +
      "(rules.lte) && this < rules.gte? \'value " +
      "must be greater than or equal to %s\'.for" +
      "mat([rules.gte]) : \'\'\n\304\001\n\016fixed64.gte_lt" +
      "\032\261\001has(rules.lt) && rules.lt >= rules.gt" +
      "e && (this >= rules.lt || this < rules.g" +
      "te)? \'value must be greater than or equa" +
      "l to %s and less than %s\'.format([rules." +
      "gte, rules.lt]) : \'\'\n\314\001\n\030fixed64.gte_lt_" +
      "exclusive\032\257\001has(rules.lt) && rules.lt < " +
      "rules.gte && (rules.lt <= this && this <" +
      " rules.gte)? \'value must be greater than" +
      " or equal to %s or less than %s\'.format(" +
      "[rules.gte, rules.lt]) : \'\'\n\324\001\n\017fixed64." +
      "gte_lte\032\300\001has(rules.lte) && rules.lte >=" +
      " rules.gte && (this > rules.lte || this " +
      "< rules.gte)? \'value must be greater tha" +
      "n or equal to %s and less than or equal " +
      "to %s\'.format([rules.gte, rules.lte]) : " +
      "\'\'\n\334\001\n\031fixed64.gte_lte_exclusive\032\276\001has(r" +
      "ules.lte) && rules.lte < rules.gte && (r" +
      "ules.lte < this && this < rules.gte)? \'v" +
      "alue must be greater than or equal to %s" +
      " or less than or equal to %s\'.format([ru" +
      "les.gte, rules.lte]) : \'\'H\004R\003gte\210\001\001\022|\n\002i" +
      "n\030\006 \003(\006Bl\202\370\030h\nf\n\nfixed64.in\032X!(this in d" +
      "yn(rules)[\'in\']) ? \'value must be in lis" +
      "t %s\'.format([dyn(rules)[\'in\']]) : \'\'R\002i" +
      "n\022\200\001\n\006not_in\030\007 \003(\006Bi\202\370\030e\nc\n\016fixed64.not_" +
      "in\032Qthis in rules.not_in ? \'value must n" +
      "ot be in list %s\'.format([rules.not_in])" +
      " : \'\'R\005notInB\010\n\006_constB\005\n\003_ltB\006\n\004_lteB\005\n" +
      "\003_gtB\006\n\004_gte\"\250\025\n\rSFixed32Rules\022y\n\005const\030" +
      "\001 \001(\017B^\202\370\030Z\nX\n\016sfixed32.const\032Fthis != r" +
      "ules.const ? \'value must equal %s\'.forma" +
      "t([rules.const]) : \'\'H\000R\005const\210\001\001\022\226\001\n\002lt" +
      "\030\002 \001(\017B\200\001\202\370\030|\nz\n\013sfixed32.lt\032k!has(rules" +
      ".gte) && !has(rules.gt) && this >= rules" +
      ".lt? \'value must be less than %s\'.format" +
      "([rules.lt]) : \'\'H\001R\002lt\210\001\001\022\250\001\n\003lte\030\003 \001(\017" +
      "B\220\001\202\370\030\213\001\n\210\001\n\014sfixed32.lte\032x!has(rules.gt" +
      "e) && !has(rules.gt) && this > rules.lte" +
      "? \'value must be less than or equal to %" +
      "s\'.format([rules.lte]) : \'\'H\002R\003lte\210\001\001\022\256\007" +
      "\n\002gt\030\004 \001(\017B\230\007\202\370\030\223\007\n}\n\013sfixed32.gt\032n!has(" +
      "rules.lt) && !has(rules.lte) && this <= " +
      "rules.gt? \'value must be greater than %s" +
      "\'.format([rules.gt]) : \'\'\n\266\001\n\016sfixed32.g" +
      "t_lt\032\243\001has(rules.lt) && rules.lt >= rule" +
      "s.gt && (this >= rules.lt || this <= rul" +
      "es.gt)? \'value must be greater than %s a" +
      "nd less than %s\'.format([rules.gt, rules" +
      ".lt]) : \'\'\n\276\001\n\030sfixed32.gt_lt_exclusive\032" +
      "\241\001has(rules.lt) && rules.lt < rules.gt &" +
      "& (rules.lt <= this && this <= rules.gt)" +
      "? \'value must be greater than %s or less" +
      " than %s\'.format([rules.gt, rules.lt]) :" +
      " \'\'\n\306\001\n\017sfixed32.gt_lte\032\262\001has(rules.lte)" +
      " && rules.lte >= rules.gt && (this > rul" +
      "es.lte || this <= rules.gt)? \'value must" +
      " be greater than %s and less than or equ" +
      "al to %s\'.format([rules.gt, rules.lte]) " +
      ": \'\'\n\316\001\n\031sfixed32.gt_lte_exclusive\032\260\001has" +
      "(rules.lte) && rules.lte < rules.gt && (" +
      "rules.lte < this && this <= rules.gt)? \'" +
      "value must be greater than %s or less th" +
      "an or equal to %s\'.format([rules.gt, rul" +
      "es.lte]) : \'\'H\003R\002gt\210\001\001\022\373\007\n\003gte\030\005 \001(\017B\343\007\202" +
      "\370\030\336\007\n\213\001\n\014sfixed32.gte\032{!has(rules.lt) &&" +
      " !has(rules.lte) && this < rules.gte? \'v" +
      "alue must be greater than or equal to %s" +
      "\'.format([rules.gte]) : \'\'\n\305\001\n\017sfixed32." +
      "gte_lt\032\261\001has(rules.lt) && rules.lt >= ru" +
      "les.gte && (this >= rules.lt || this < r" +
      "ules.gte)? \'value must be greater than o" +
      "r equal to %s and less than %s\'.format([" +
      "rules.gte, rules.lt]) : \'\'\n\315\001\n\031sfixed32." +
      "gte_lt_exclusive\032\257\001has(rules.lt) && rule" +
      "s.lt < rules.gte && (rules.lt <= this &&" +
      " this < rules.gte)? \'value must be great" +
      "er than or equal to %s or less than %s\'." +
      "format([rules.gte, rules.lt]) : \'\'\n\325\001\n\020s" +
      "fixed32.gte_lte\032\300\001has(rules.lte) && rule" +
      "s.lte >= rules.gte && (this > rules.lte " +
      "|| this < rules.gte)? \'value must be gre" +
      "ater than or equal to %s and less than o" +
      "r equal to %s\'.format([rules.gte, rules." +
      "lte]) : \'\'\n\335\001\n\032sfixed32.gte_lte_exclusiv" +
      "e\032\276\001has(rules.lte) && rules.lte < rules." +
      "gte && (rules.lte < this && this < rules" +
      ".gte)? \'value must be greater than or eq" +
      "ual to %s or less than or equal to %s\'.f" +
      "ormat([rules.gte, rules.lte]) : \'\'H\004R\003gt" +
      "e\210\001\001\022}\n\002in\030\006 \003(\017Bm\202\370\030i\ng\n\013sfixed32.in\032X!" +
      "(this in dyn(rules)[\'in\']) ? \'value must" +
      " be in list %s\'.format([dyn(rules)[\'in\']" +
      "]) : \'\'R\002in\022\201\001\n\006not_in\030\007 \003(\017Bj\202\370\030f\nd\n\017sf" +
      "ixed32.not_in\032Qthis in rules.not_in ? \'v" +
      "alue must not be in list %s\'.format([rul" +
      "es.not_in]) : \'\'R\005notInB\010\n\006_constB\005\n\003_lt" +
      "B\006\n\004_lteB\005\n\003_gtB\006\n\004_gte\"\250\025\n\rSFixed64Rule" +
      "s\022y\n\005const\030\001 \001(\020B^\202\370\030Z\nX\n\016sfixed64.const" +
      "\032Fthis != rules.const ? \'value must equa" +
      "l %s\'.format([rules.const]) : \'\'H\000R\005cons" +
      "t\210\001\001\022\226\001\n\002lt\030\002 \001(\020B\200\001\202\370\030|\nz\n\013sfixed64.lt\032" +
      "k!has(rules.gte) && !has(rules.gt) && th" +
      "is >= rules.lt? \'value must be less than" +
      " %s\'.format([rules.lt]) : \'\'H\001R\002lt\210\001\001\022\250\001" +
      "\n\003lte\030\003 \001(\020B\220\001\202\370\030\213\001\n\210\001\n\014sfixed64.lte\032x!h" +
      "as(rules.gte) && !has(rules.gt) && this " +
      "> rules.lte? \'value must be less than or" +
      " equal to %s\'.format([rules.lte]) : \'\'H\002" +
      "R\003lte\210\001\001\022\256\007\n\002gt\030\004 \001(\020B\230\007\202\370\030\223\007\n}\n\013sfixed6" +
      "4.gt\032n!has(rules.lt) && !has(rules.lte) " +
      "&& this <= rules.gt? \'value must be grea" +
      "ter than %s\'.format([rules.gt]) : \'\'\n\266\001\n" +
      "\016sfixed64.gt_lt\032\243\001has(rules.lt) && rules",
      ".lt >= rules.gt && (this >= rules.lt || " +
      "this <= rules.gt)? \'value must be greate" +
      "r than %s and less than %s\'.format([rule" +
      "s.gt, rules.lt]) : \'\'\n\276\001\n\030sfixed64.gt_lt" +
      "_exclusive\032\241\001has(rules.lt) && rules.lt <" +
      " rules.gt && (rules.lt <= this && this <" +
      "= rules.gt)? \'value must be greater than" +
      " %s or less than %s\'.format([rules.gt, r" +
      "ules.lt]) : \'\'\n\306\001\n\017sfixed64.gt_lte\032\262\001has" +
      "(rules.lte) && rules.lte >= rules.gt && " +
      "(this > rules.lte || this <= rules.gt)? " +
      "\'value must be greater than %s and less " +
      "than or equal to %s\'.format([rules.gt, r" +
      "ules.lte]) : \'\'\n\316\001\n\031sfixed64.gt_lte_excl" +
      "usive\032\260\001has(rules.lte) && rules.lte < ru" +
      "les.gt && (rules.lte < this && this <= r" +
      "ules.gt)? \'value must be greater than %s" +
      " or less than or equal to %s\'.format([ru" +
      "les.gt, rules.lte]) : \'\'H\003R\002gt\210\001\001\022\373\007\n\003gt" +
      "e\030\005 \001(\020B\343\007\202\370\030\336\007\n\213\001\n\014sfixed64.gte\032{!has(r" +
      "ules.lt) && !has(rules.lte) && this < ru" +
      "les.gte? \'value must be greater than or " +
      "equal to %s\'.format([rules.gte]) : \'\'\n\305\001" +
      "\n\017sfixed64.gte_lt\032\261\001has(rules.lt) && rul" +
      "es.lt >= rules.gte && (this >= rules.lt " +
      "|| this < rules.gte)? \'value must be gre" +
      "ater than or equal to %s and less than %" +
      "s\'.format([rules.gte, rules.lt]) : \'\'\n\315\001" +
      "\n\031sfixed64.gte_lt_exclusive\032\257\001has(rules." +
      "lt) && rules.lt < rules.gte && (rules.lt" +
      " <= this && this < rules.gte)? \'value mu" +
      "st be greater than or equal to %s or les" +
      "s than %s\'.format([rules.gte, rules.lt])" +
      " : \'\'\n\325\001\n\020sfixed64.gte_lte\032\300\001has(rules.l" +
      "te) && rules.lte >= rules.gte && (this >" +
      " rules.lte || this < rules.gte)? \'value " +
      "must be greater than or equal to %s and " +
      "less than or equal to %s\'.format([rules." +
      "gte, rules.lte]) : \'\'\n\335\001\n\032sfixed64.gte_l" +
      "te_exclusive\032\276\001has(rules.lte) && rules.l" +
      "te < rules.gte && (rules.lte < this && t" +
      "his < rules.gte)? \'value must be greater" +
      " than or equal to %s or less than or equ" +
      "al to %s\'.format([rules.gte, rules.lte])" +
      " : \'\'H\004R\003gte\210\001\001\022}\n\002in\030\006 \003(\020Bm\202\370\030i\ng\n\013sfi" +
      "xed64.in\032X!(this in dyn(rules)[\'in\']) ? " +
      "\'value must be in list %s\'.format([dyn(r" +
      "ules)[\'in\']]) : \'\'R\002in\022\201\001\n\006not_in\030\007 \003(\020B" +
      "j\202\370\030f\nd\n\017sfixed64.not_in\032Qthis in rules." +
      "not_in ? \'value must not be in list %s\'." +
      "format([rules.not_in]) : \'\'R\005notInB\010\n\006_c" +
      "onstB\005\n\003_ltB\006\n\004_lteB\005\n\003_gtB\006\n\004_gte\"\214\001\n\tB" +
      "oolRules\022u\n\005const\030\001 \001(\010BZ\202\370\030V\nT\n\nbool.co" +
      "nst\032Fthis != rules.const ? \'value must e" +
      "qual %s\'.format([rules.const]) : \'\'H\000R\005c" +
      "onst\210\001\001B\010\n\006_const\"\276\036\n\013StringRules\022y\n\005con" +
      "st\030\001 \001(\tB^\202\370\030Z\nX\n\014string.const\032Hthis != " +
      "rules.const ? \'value must equal `%s`\'.fo" +
      "rmat([rules.const]) : \'\'H\001R\005const\210\001\001\022\200\001\n" +
      "\003len\030\023 \001(\004Bi\202\370\030e\nc\n\nstring.len\032Uuint(thi" +
      "s.size()) != rules.len ? \'value must equ" +
      "al %s runes\'.format([rules.len]) : \'\'H\002R" +
      "\003len\210\001\001\022\240\001\n\007min_len\030\002 \001(\004B\201\001\202\370\030}\n{\n\016stri" +
      "ng.min_len\032iuint(this.size()) < rules.mi" +
      "n_len ? \'value length must be at least %" +
      "s runes\'.format([rules.min_len]) : \'\'H\003R" +
      "\006minLen\210\001\001\022\237\001\n\007max_len\030\003 \001(\004B\200\001\202\370\030|\nz\n\016s" +
      "tring.max_len\032huint(this.size()) > rules" +
      ".max_len ? \'value length must be at most" +
      " %s runes\'.format([rules.max_len]) : \'\'H" +
      "\004R\006maxLen\210\001\001\022\253\001\n\tlen_bytes\030\024 \001(\004B\210\001\202\370\030\203\001" +
      "\n\200\001\n\020string.len_bytes\032luint(bytes(this)." +
      "size()) != rules.len_bytes ? \'value leng" +
      "th must be %s bytes\'.format([rules.len_b" +
      "ytes]) : \'\'H\005R\010lenBytes\210\001\001\022\263\001\n\tmin_bytes" +
      "\030\004 \001(\004B\220\001\202\370\030\213\001\n\210\001\n\020string.min_bytes\032tuin" +
      "t(bytes(this).size()) < rules.min_bytes " +
      "? \'value length must be at least %s byte" +
      "s\'.format([rules.min_bytes]) : \'\'H\006R\010min" +
      "Bytes\210\001\001\022\262\001\n\tmax_bytes\030\005 \001(\004B\217\001\202\370\030\212\001\n\207\001\n" +
      "\020string.max_bytes\032suint(bytes(this).size" +
      "()) > rules.max_bytes ? \'value length mu" +
      "st be at most %s bytes\'.format([rules.ma" +
      "x_bytes]) : \'\'H\007R\010maxBytes\210\001\001\022\234\001\n\007patter" +
      "n\030\006 \001(\tB}\202\370\030y\nw\n\016string.pattern\032e!this.m" +
      "atches(rules.pattern) ? \'value does not " +
      "match regex pattern `%s`\'.format([rules." +
      "pattern]) : \'\'H\010R\007pattern\210\001\001\022\222\001\n\006prefix\030" +
      "\007 \001(\tBu\202\370\030q\no\n\rstring.prefix\032^!this.star" +
      "tsWith(rules.prefix) ? \'value does not h" +
      "ave prefix `%s`\'.format([rules.prefix]) " +
      ": \'\'H\tR\006prefix\210\001\001\022\220\001\n\006suffix\030\010 \001(\tBs\202\370\030o" +
      "\nm\n\rstring.suffix\032\\!this.endsWith(rules." +
      "suffix) ? \'value does not have suffix `%" +
      "s`\'.format([rules.suffix]) : \'\'H\nR\006suffi" +
      "x\210\001\001\022\240\001\n\010contains\030\t \001(\tB\177\202\370\030{\ny\n\017string." +
      "contains\032f!this.contains(rules.contains)" +
      " ? \'value does not contain substring `%s" +
      "`\'.format([rules.contains]) : \'\'H\013R\010cont" +
      "ains\210\001\001\022\253\001\n\014not_contains\030\027 \001(\tB\202\001\202\370\030~\n|\n" +
      "\023string.not_contains\032ethis.contains(rule" +
      "s.not_contains) ? \'value contains substr" +
      "ing `%s`\'.format([rules.not_contains]) :" +
      " \'\'H\014R\013notContains\210\001\001\022{\n\002in\030\n \003(\tBk\202\370\030g\n" +
      "e\n\tstring.in\032X!(this in dyn(rules)[\'in\']" +
      ") ? \'value must be in list %s\'.format([d" +
      "yn(rules)[\'in\']]) : \'\'R\002in\022\177\n\006not_in\030\013 \003" +
      "(\tBh\202\370\030d\nb\n\rstring.not_in\032Qthis in rules" +
      ".not_in ? \'value must not be in list %s\'" +
      ".format([rules.not_in]) : \'\'R\005notIn\022a\n\005e" +
      "mail\030\014 \001(\010BI\202\370\030E\nC\n\014string.email\022#value " +
      "must be a valid email address\032\016this.isEm" +
      "ail()H\000R\005email\022h\n\010hostname\030\r \001(\010BJ\202\370\030F\nD" +
      "\n\017string.hostname\022\036value must be a valid" +
      " hostname\032\021this.isHostname()H\000R\010hostname" +
      "\022R\n\002ip\030\016 \001(\010B@\202\370\030<\n:\n\tstring.ip\022 value m" +
      "ust be a valid IP address\032\013this.isIp()H\000" +
      "R\002ip\022[\n\004ipv4\030\017 \001(\010BE\202\370\030A\n?\n\013string.ipv4\022" +
      "\"value must be a valid IPv4 address\032\014thi" +
      "s.isIp(4)H\000R\004ipv4\022[\n\004ipv6\030\020 \001(\010BE\202\370\030A\n?\n" +
      "\013string.ipv6\022\"value must be a valid IPv6" +
      " address\032\014this.isIp(6)H\000R\004ipv6\022O\n\003uri\030\021 " +
      "\001(\010B;\202\370\0307\n5\n\nstring.uri\022\031value must be a" +
      " valid URI\032\014this.isUri()H\000R\003uri\022]\n\007uri_r" +
      "ef\030\022 \001(\010BB\202\370\030>\n<\n\016string.uri_ref\022\031value " +
      "must be a valid URI\032\017this.isUriRef()H\000R\006" +
      "uriRef\022\203\001\n\007address\030\025 \001(\010Bg\202\370\030c\na\n\016string" +
      ".address\022-value must be a valid hostname" +
      ", or ip address\032 this.isHostname() || th" +
      "is.isIp()H\000R\007address\022\261\001\n\004uuid\030\026 \001(\010B\232\001\202\370" +
      "\030\225\001\n\222\001\n\013string.uuid\032\202\001!this.matches(\'^[0" +
      "-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{" +
      "4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\') ? \'" +
      "value must be a valid UUID\' : \'\'H\000R\004uuid" +
      "\022\255\004\n\020well_known_regex\030\030 \001(\0162\030.buf.valida" +
      "te.KnownRegexB\346\003\202\370\030\341\003\n\353\001\n#string.well_kn" +
      "own_regex.header_name\032\303\001rules.well_known" +
      "_regex == 1 && !this.matches(!has(rules." +
      "strict) || rules.strict ?\'^:?[0-9a-zA-Z!" +
      "#$%&\\\'*+-.^_|~\\x60]+$\' :\'^[^\\u0000\\u000A" +
      "\\u000D]+$\') ? \'value must be a valid HTT" +
      "P header name\' : \'\'\n\360\001\n$string.well_know" +
      "n_regex.header_value\032\307\001rules.well_known_" +
      "regex == 2 && !this.matches(!has(rules.s" +
      "trict) || rules.strict ?\'^[^\\u0000-\\u000" +
      "8\\u000A-\\u001F\\u007F]*$\' :\'^[^\\u0000\\u00" +
      "0A\\u000D]*$\') ? \'value must be a valid H" +
      "TTP header value\' : \'\'H\000R\016wellKnownRegex" +
      "\022\033\n\006strict\030\031 \001(\010H\rR\006strict\210\001\001B\014\n\nwell_kn" +
      "ownB\010\n\006_constB\006\n\004_lenB\n\n\010_min_lenB\n\n\010_ma" +
      "x_lenB\014\n\n_len_bytesB\014\n\n_min_bytesB\014\n\n_ma" +
      "x_bytesB\n\n\010_patternB\t\n\007_prefixB\t\n\007_suffi" +
      "xB\013\n\t_containsB\017\n\r_not_containsB\t\n\007_stri" +
      "ct\"\325\016\n\nBytesRules\022s\n\005const\030\001 \001(\014BX\202\370\030T\nR" +
      "\n\013bytes.const\032Cthis != rules.const ? \'va" +
      "lue must be %x\'.format([rules.const]) : " +
      "\'\'H\001R\005const\210\001\001\022\202\001\n\003len\030\r \001(\004Bk\202\370\030g\ne\n\tby" +
      "tes.len\032Xthis.size() != int(rules.len) ?" +
      " \'value length must be %s bytes\'.format(" +
      "[rules.len]) : \'\'H\002R\003len\210\001\001\022\226\001\n\007min_len\030" +
      "\002 \001(\004Bx\202\370\030t\nr\n\rbytes.min_len\032athis.size(" +
      ") < int(rules.min_len) ? \'value must be " +
      "at least %s bytes\'.format([rules.min_len" +
      "]) : \'\'H\003R\006minLen\210\001\001\022\225\001\n\007max_len\030\003 \001(\004Bw" +
      "\202\370\030s\nq\n\rbytes.max_len\032`this.size() > int" +
      "(rules.max_len) ? \'value must be at most" +
      " %s bytes\'.format([rules.max_len]) : \'\'H" +
      "\004R\006maxLen\210\001\001\022\227\001\n\007pattern\030\004 \001(\tBx\202\370\030t\nr\n\r" +
      "bytes.pattern\032a!string(this).matches(rul" +
      "es.pattern) ? \'value must match pattern " +
      "%s\'.format([rules.pattern]) : \'\'H\005R\007patt" +
      "ern\210\001\001\022\217\001\n\006prefix\030\005 \001(\014Br\202\370\030n\nl\n\014bytes.p" +
      "refix\032\\!this.startsWith(rules.prefix) ? " +
      "\'value does not have prefix %x\'.format([" +
      "rules.prefix]) : \'\'H\006R\006prefix\210\001\001\022\215\001\n\006suf" +
      "fix\030\006 \001(\014Bp\202\370\030l\nj\n\014bytes.suffix\032Z!this.e" +
      "ndsWith(rules.suffix) ? \'value does not " +
      "have suffix %x\'.format([rules.suffix]) :" +
      " \'\'H\007R\006suffix\210\001\001\022\223\001\n\010contains\030\007 \001(\014Br\202\370\030" +
      "n\nl\n\016bytes.contains\032Z!this.contains(rule" +
      "s.contains) ? \'value does not contain %x" +
      "\'.format([rules.contains]) : \'\'H\010R\010conta" +
      "ins\210\001\001\022\234\001\n\002in\030\010 \003(\014B\213\001\202\370\030\206\001\n\203\001\n\010bytes.in" +
      "\032wdyn(rules)[\'in\'].size() > 0 && !(this " +
      "in dyn(rules)[\'in\']) ? \'value must be in" +
      " list %s\'.format([dyn(rules)[\'in\']]) : \'" +
      "\'R\002in\022~\n\006not_in\030\t \003(\014Bg\202\370\030c\na\n\014bytes.not" +
      "_in\032Qthis in rules.not_in ? \'value must " +
      "not be in list %s\'.format([rules.not_in]" +
      ") : \'\'R\005notIn\022s\n\002ip\030\n \001(\010Ba\202\370\030]\n[\n\010bytes" +
      ".ip\032Othis.size() != 4 && this.size() != " +
      "16 ? \'value must be a valid IP address\' " +
      ": \'\'H\000R\002ip\022f\n\004ipv4\030\013 \001(\010BP\202\370\030L\nJ\n\nbytes." +
      "ipv4\032<this.size() != 4 ? \'value must be " +
      "a valid IPv4 address\' : \'\'H\000R\004ipv4\022g\n\004ip" +
      "v6\030\014 \001(\010BQ\202\370\030M\nK\n\nbytes.ipv6\032=this.size(" +
      ") != 16 ? \'value must be a valid IPv6 ad" +
      "dress\' : \'\'H\000R\004ipv6B\014\n\nwell_knownB\010\n\006_co" +
      "nstB\006\n\004_lenB\n\n\010_min_lenB\n\n\010_max_lenB\n\n\010_" +
      "patternB\t\n\007_prefixB\t\n\007_suffixB\013\n\t_contai" +
      "ns\"\277\003\n\tEnumRules\022u\n\005const\030\001 \001(\005BZ\202\370\030V\nT\n" +
      "\nenum.const\032Fthis != rules.const ? \'valu" +
      "e must equal %s\'.format([rules.const]) :" +
      " \'\'H\000R\005const\210\001\001\022&\n\014defined_only\030\002 \001(\010H\001R" +
      "\013definedOnly\210\001\001\022y\n\002in\030\003 \003(\005Bi\202\370\030e\nc\n\007enu" +
      "m.in\032X!(this in dyn(rules)[\'in\']) ? \'val" +
      "ue must be in list %s\'.format([dyn(rules" +
      ")[\'in\']]) : \'\'R\002in\022}\n\006not_in\030\004 \003(\005Bf\202\370\030b" +
      "\n`\n\013enum.not_in\032Qthis in rules.not_in ? " +
      "\'value must not be in list %s\'.format([r" +
      "ules.not_in]) : \'\'R\005notInB\010\n\006_constB\017\n\r_" +
      "defined_only\"\302\004\n\rRepeatedRules\022\246\001\n\tmin_i" +
      "tems\030\001 \001(\004B\203\001\202\370\030\177\n}\n\022repeated.min_items\032" +
      "gthis.size() < rules.min_items ? \'value " +
      "must contain at least %d item(s)\'.format" +
      "([rules.min_items]) : \'\'H\000R\010minItems\210\001\001\022" +
      "\254\001\n\tmax_items\030\002 \001(\004B\211\001\202\370\030\204\001\n\201\001\n\022repeated" +
      ".max_items\032kthis.size() > rules.max_item" +
      "s ? \'value must contain no more than %s " +
      "item(s)\'.format([rules.max_items]) : \'\'H" +
      "\001R\010maxItems\210\001\001\022m\n\006unique\030\003 \001(\010BP\202\370\030L\nJ\n\017" +
      "repeated.unique\022(repeated value must con" +
      "tain unique items\032\rthis.unique()H\002R\006uniq" +
      "ue\210\001\001\0229\n\005items\030\004 \001(\0132\036.buf.validate.Fiel" +
      "dConstraintsH\003R\005items\210\001\001B\014\n\n_min_itemsB\014" +
      "\n\n_max_itemsB\t\n\007_uniqueB\010\n\006_items\"\347\003\n\010Ma" +
      "pRules\022\231\001\n\tmin_pairs\030\001 \001(\004Bw\202\370\030s\nq\n\rmap." +
      "min_pairs\032`this.size() < rules.min_pairs" +
      " ? \'map must be at least %d entries\'.for" +
      "mat([rules.min_pairs]) : \'\'H\000R\010minPairs\210" +
      "\001\001\022\230\001\n\tmax_pairs\030\002 \001(\004Bv\202\370\030r\np\n\rmap.max_" +
      "pairs\032_this.size() > rules.max_pairs ? \'" +
      "map must be at most %d entries\'.format([" +
      "rules.max_pairs]) : \'\'H\001R\010maxPairs\210\001\001\0227\n" +
      "\004keys\030\004 \001(\0132\036.buf.validate.FieldConstrai" +
      "ntsH\002R\004keys\210\001\001\022;\n\006values\030\005 \001(\0132\036.buf.val" +
      "idate.FieldConstraintsH\003R\006values\210\001\001B\014\n\n_" +
      "min_pairsB\014\n\n_max_pairsB\007\n\005_keysB\t\n\007_val" +
      "ues\"1\n\010AnyRules\022\016\n\002in\030\002 \003(\tR\002in\022\025\n\006not_i" +
      "n\030\003 \003(\tR\005notIn\"\347\026\n\rDurationRules\022\224\001\n\005con" +
      "st\030\002 \001(\0132\031.google.protobuf.DurationB^\202\370\030" +
      "Z\nX\n\016duration.const\032Fthis != rules.const" +
      " ? \'value must equal %s\'.format([rules.c" +
      "onst]) : \'\'H\000R\005const\210\001\001\022\261\001\n\002lt\030\003 \001(\0132\031.g" +
      "oogle.protobuf.DurationB\200\001\202\370\030|\nz\n\013durati" +
      "on.lt\032k!has(rules.gte) && !has(rules.gt)" +
      " && this >= rules.lt? \'value must be les" +
      "s than %s\'.format([rules.lt]) : \'\'H\001R\002lt" +
      "\210\001\001\022\303\001\n\003lte\030\004 \001(\0132\031.google.protobuf.Dura" +
      "tionB\220\001\202\370\030\213\001\n\210\001\n\014duration.lte\032x!has(rule" +
      "s.gte) && !has(rules.gt) && this > rules" +
      ".lte? \'value must be less than or equal " +
      "to %s\'.format([rules.lte]) : \'\'H\002R\003lte\210\001" +
      "\001\022\311\007\n\002gt\030\005 \001(\0132\031.google.protobuf.Duratio" +
      "nB\230\007\202\370\030\223\007\n}\n\013duration.gt\032n!has(rules.lt)" +
      " && !has(rules.lte) && this <= rules.gt?" +
      " \'value must be greater than %s\'.format(" +
      "[rules.gt]) : \'\'\n\266\001\n\016duration.gt_lt\032\243\001ha" +
      "s(rules.lt) && rules.lt >= rules.gt && (" +
      "this >= rules.lt || this <= rules.gt)? \'" +
      "value must be greater than %s and less t" +
      "han %s\'.format([rules.gt, rules.lt]) : \'" +
      "\'\n\276\001\n\030duration.gt_lt_exclusive\032\241\001has(rul" +
      "es.lt) && rules.lt < rules.gt && (rules." +
      "lt <= this && this <= rules.gt)? \'value " +
      "must be greater than %s or less than %s\'" +
      ".format([rules.gt, rules.lt]) : \'\'\n\306\001\n\017d" +
      "uration.gt_lte\032\262\001has(rules.lte) && rules" +
      ".lte >= rules.gt && (this > rules.lte ||" +
      " this <= rules.gt)? \'value must be great" +
      "er than %s and less than or equal to %s\'" +
      ".format([rules.gt, rules.lte]) : \'\'\n\316\001\n\031" +
      "duration.gt_lte_exclusive\032\260\001has(rules.lt" +
      "e) && rules.lte < rules.gt && (rules.lte" +
      " < this && this <= rules.gt)? \'value mus" +
      "t be greater than %s or less than or equ" +
      "al to %s\'.format([rules.gt, rules.lte]) " +
      ": \'\'H\003R\002gt\210\001\001\022\226\010\n\003gte\030\006 \001(\0132\031.google.pro" +
      "tobuf.DurationB\343\007\202\370\030\336\007\n\213\001\n\014duration.gte\032" +
      "{!has(rules.lt) && !has(rules.lte) && th" +
      "is < rules.gte? \'value must be greater t" +
      "han or equal to %s\'.format([rules.gte]) " +
      ": \'\'\n\305\001\n\017duration.gte_lt\032\261\001has(rules.lt)" +
      " && rules.lt >= rules.gte && (this >= ru" +
      "les.lt || this < rules.gte)? \'value must" +
      " be greater than or equal to %s and less" +
      " than %s\'.format([rules.gte, rules.lt]) " +
      ": \'\'\n\315\001\n\031duration.gte_lt_exclusive\032\257\001has" +
      "(rules.lt) && rules.lt < rules.gte && (r" +
      "ules.lt <= this && this < rules.gte)? \'v" +
      "alue must be greater than or equal to %s" +
      " or less than %s\'.format([rules.gte, rul" +
      "es.lt]) : \'\'\n\325\001\n\020duration.gte_lte\032\300\001has(" +
      "rules.lte) && rules.lte >= rules.gte && " +
      "(this > rules.lte || this < rules.gte)? " +
      "\'value must be greater than or equal to " +
      "%s and less than or equal to %s\'.format(" +
      "[rules.gte, rules.lte]) : \'\'\n\335\001\n\032duratio" +
      "n.gte_lte_exclusive\032\276\001has(rules.lte) && " +
      "rules.lte < rules.gte && (rules.lte < th" +
      "is && this < rules.gte)? \'value must be " +
      "greater than or equal to %s or less than" +
      " or equal to %s\'.format([rules.gte, rule" +
      "s.lte]) : \'\'H\004R\003gte\210\001\001\022\230\001\n\002in\030\007 \003(\0132\031.go" +
      "ogle.protobuf.DurationBm\202\370\030i\ng\n\013duration" +
      ".in\032X!(this in dyn(rules)[\'in\']) ? \'valu" +
      "e must be in list %s\'.format([dyn(rules)" +
      "[\'in\']]) : \'\'R\002in\022\234\001\n\006not_in\030\010 \003(\0132\031.goo" +
      "gle.protobuf.DurationBj\202\370\030f\nd\n\017duration." +
      "not_in\032Qthis in rules.not_in ? \'value mu" +
      "st not be in list %s\'.format([rules.not_" +
      "in]) : \'\'R\005notInB\010\n\006_constB\005\n\003_ltB\006\n\004_lt" +
      "eB\005\n\003_gtB\006\n\004_gte\"\203\030\n\016TimestampRules\022\226\001\n\005" +
      "const\030\002 \001(\0132\032.google.protobuf.TimestampB" +
      "_\202\370\030[\nY\n\017timestamp.const\032Fthis != rules." +
      "const ? \'value must equal %s\'.format([ru" +
      "les.const]) : \'\'H\000R\005const\210\001\001\022\263\001\n\002lt\030\003 \001(" +
      "\0132\032.google.protobuf.TimestampB\201\001\202\370\030}\n{\n\014" +
      "timestamp.lt\032k!has(rules.gte) && !has(ru" +
      "les.gt) && this >= rules.lt? \'value must" +
      " be less than %s\'.format([rules.lt]) : \'" +
      "\'H\001R\002lt\210\001\001\022\305\001\n\003lte\030\004 \001(\0132\032.google.protob" +
      "uf.TimestampB\221\001\202\370\030\214\001\n\211\001\n\rtimestamp.lte\032x" +
      "!has(rules.gte) && !has(rules.gt) && thi" +
      "s > rules.lte? \'value must be less than " +
      "or equal to %s\'.format([rules.lte]) : \'\'" +
      "H\002R\003lte\210\001\001\022\317\007\n\002gt\030\005 \001(\0132\032.google.protobu" +
      "f.TimestampB\235\007\202\370\030\230\007\n~\n\014timestamp.gt\032n!ha" +
      "s(rules.lt) && !has(rules.lte) && this <" +
      "= rules.gt? \'value must be greater than " +
      "%s\'.format([rules.gt]) : \'\'\n\267\001\n\017timestam" +
      "p.gt_lt\032\243\001has(rules.lt) && rules.lt >= r" +
      "ules.gt && (this >= rules.lt || this <= " +
      "rules.gt)? \'value must be greater than %" +
      "s and less than %s\'.format([rules.gt, ru" +
      "les.lt]) : \'\'\n\277\001\n\031timestamp.gt_lt_exclus" +
      "ive\032\241\001has(rules.lt) && rules.lt < rules." +
      "gt && (rules.lt <= this && this <= rules" +
      ".gt)? \'value must be greater than %s or " +
      "less than %s\'.format([rules.gt, rules.lt" +
      "]) : \'\'\n\307\001\n\020timestamp.gt_lte\032\262\001has(rules" +
      ".lte) && rules.lte >= rules.gt && (this " +
      "> rules.lte || this <= rules.gt)? \'value" +
      " must be greater than %s and less than o" +
      "r equal to %s\'.format([rules.gt, rules.l" +
      "te]) : \'\'\n\317\001\n\032timestamp.gt_lte_exclusive" +
      "\032\260\001has(rules.lte) && rules.lte < rules.g" +
      "t && (rules.lte < this && this <= rules." +
      "gt)? \'value must be greater than %s or l" +
      "ess than or equal to %s\'.format([rules.g" +
      "t, rules.lte]) : \'\'H\003R\002gt\210\001\001\022\234\010\n\003gte\030\006 \001" +
      "(\0132\032.google.protobuf.TimestampB\350\007\202\370\030\343\007\n\214" +
      "\001\n\rtimestamp.gte\032{!has(rules.lt) && !has" +
      "(rules.lte) && this < rules.gte? \'value " +
      "must be greater than or equal to %s\'.for" +
      "mat([rules.gte]) : \'\'\n\306\001\n\020timestamp.gte_" +
      "lt\032\261\001has(rules.lt) && rules.lt >= rules." +
      "gte && (this >= rules.lt || this < rules" +
      ".gte)? \'value must be greater than or eq" +
      "ual to %s and less than %s\'.format([rule" +
      "s.gte, rules.lt]) : \'\'\n\316\001\n\032timestamp.gte" +
      "_lt_exclusive\032\257\001has(rules.lt) && rules.l" +
      "t < rules.gte && (rules.lt <= this && th" +
      "is < rules.gte)? \'value must be greater " +
      "than or equal to %s or less than %s\'.for" +
      "mat([rules.gte, rules.lt]) : \'\'\n\326\001\n\021time" +
      "stamp.gte_lte\032\300\001has(rules.lte) && rules." +
      "lte >= rules.gte && (this > rules.lte ||" +
      " this < rules.gte)? \'value must be great" +
      "er than or equal to %s and less than or " +
      "equal to %s\'.format([rules.gte, rules.lt" +
      "e]) : \'\'\n\336\001\n\033timestamp.gte_lte_exclusive" +
      "\032\276\001has(rules.lte) && rules.lte < rules.g" +
      "te && (rules.lte < this && this < rules." +
      "gte)? \'value must be greater than or equ" +
      "al to %s or less than or equal to %s\'.fo" +
      "rmat([rules.gte, rules.lte]) : \'\'H\004R\003gte" +
      "\210\001\001\022g\n\006lt_now\030\007 \001(\010BK\202\370\030G\nE\n\020timestamp.l" +
      "t_now\0321this > now() ? \'value must be les" +
      "s than now\' : \'\'H\005R\005ltNow\210\001\001\022j\n\006gt_now\030\010" +
      " \001(\010BN\202\370\030J\nH\n\020timestamp.gt_now\0324this < n" +
      "ow() ? \'value must be greater than now\' " +
      ": \'\'H\006R\005gtNow\210\001\001\022\312\001\n\006within\030\t \001(\0132\031.goog" +
      "le.protobuf.DurationB\221\001\202\370\030\214\001\n\211\001\n\020timesta" +
      "mp.within\032uthis < now()-rules.within || " +
      "this > now()+rules.within ? \'value must " +
      "be within %s of now\'.format([rules.withi" +
      "n]) : \'\'H\007R\006within\210\001\001B\010\n\006_constB\005\n\003_ltB\006" +
      "\n\004_lteB\005\n\003_gtB\006\n\004_gteB\t\n\007_lt_nowB\t\n\007_gt_" +
      "nowB\t\n\007_within*n\n\nKnownRegex\022\033\n\027KNOWN_RE" +
      "GEX_UNSPECIFIED\020\000\022 \n\034KNOWN_REGEX_HTTP_HE" +
      "ADER_NAME\020\001\022!\n\035KNOWN_REGEX_HTTP_HEADER_V" +
      "ALUE\020\002:`\n\007message\022\037.google.protobuf.Mess" +
      "ageOptions\030\377\216\003 \001(\0132 .buf.validate.Messag" +
      "eConstraintsR\007message\210\001\001:X\n\005oneof\022\035.goog" +
      "le.protobuf.OneofOptions\030\377\216\003 \001(\0132\036.buf.v" +
      "alidate.OneofConstraintsR\005oneof\210\001\001:X\n\005fi" +
      "eld\022\035.google.protobuf.FieldOptions\030\377\216\003 \001" +
      "(\0132\036.buf.validate.FieldConstraintsR\005fiel" +
      "d\210\001\001B\275\001\n\022build.buf.validateB\rValidatePro",
      "toP\001ZGbuf.build/gen/go/bufbuild/protoval" +
      "idate/protocolbuffers/go/buf/validate\242\002\003" +
      "BVX\252\002\014Buf.Validate\312\002\014Buf\\Validate\342\002\030Buf\\" +
      "Validate\\GPBMetadata\352\002\rBuf::Validateb\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          build.buf.validate.ExpressionProto.getDescriptor(),
          build.buf.validate.priv.PrivateProto.getDescriptor(),
          com.google.protobuf.DescriptorProtos.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_buf_validate_MessageConstraints_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_buf_validate_MessageConstraints_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_MessageConstraints_descriptor,
        new java.lang.String[] { "Disabled", "Cel", "Disabled", });
    internal_static_buf_validate_OneofConstraints_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_buf_validate_OneofConstraints_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_OneofConstraints_descriptor,
        new java.lang.String[] { "Required", "Required", });
    internal_static_buf_validate_FieldConstraints_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_buf_validate_FieldConstraints_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_FieldConstraints_descriptor,
        new java.lang.String[] { "Cel", "Skipped", "Required", "IgnoreEmpty", "Float", "Double", "Int32", "Int64", "Uint32", "Uint64", "Sint32", "Sint64", "Fixed32", "Fixed64", "Sfixed32", "Sfixed64", "Bool", "String", "Bytes", "Enum", "Repeated", "Map", "Any", "Duration", "Timestamp", "Type", });
    internal_static_buf_validate_FloatRules_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_buf_validate_FloatRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_FloatRules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_DoubleRules_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_buf_validate_DoubleRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_DoubleRules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_Int32Rules_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_buf_validate_Int32Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_Int32Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_Int64Rules_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_buf_validate_Int64Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_Int64Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_UInt32Rules_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_buf_validate_UInt32Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_UInt32Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_UInt64Rules_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_buf_validate_UInt64Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_UInt64Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_SInt32Rules_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_buf_validate_SInt32Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_SInt32Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_SInt64Rules_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_buf_validate_SInt64Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_SInt64Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_Fixed32Rules_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_buf_validate_Fixed32Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_Fixed32Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_Fixed64Rules_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_buf_validate_Fixed64Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_Fixed64Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_SFixed32Rules_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_buf_validate_SFixed32Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_SFixed32Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_SFixed64Rules_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_buf_validate_SFixed64Rules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_SFixed64Rules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_BoolRules_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_buf_validate_BoolRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_BoolRules_descriptor,
        new java.lang.String[] { "Const", "Const", });
    internal_static_buf_validate_StringRules_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_buf_validate_StringRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_StringRules_descriptor,
        new java.lang.String[] { "Const", "Len", "MinLen", "MaxLen", "LenBytes", "MinBytes", "MaxBytes", "Pattern", "Prefix", "Suffix", "Contains", "NotContains", "In", "NotIn", "Email", "Hostname", "Ip", "Ipv4", "Ipv6", "Uri", "UriRef", "Address", "Uuid", "WellKnownRegex", "Strict", "WellKnown", "Const", "Len", "MinLen", "MaxLen", "LenBytes", "MinBytes", "MaxBytes", "Pattern", "Prefix", "Suffix", "Contains", "NotContains", "Strict", });
    internal_static_buf_validate_BytesRules_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_buf_validate_BytesRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_BytesRules_descriptor,
        new java.lang.String[] { "Const", "Len", "MinLen", "MaxLen", "Pattern", "Prefix", "Suffix", "Contains", "In", "NotIn", "Ip", "Ipv4", "Ipv6", "WellKnown", "Const", "Len", "MinLen", "MaxLen", "Pattern", "Prefix", "Suffix", "Contains", });
    internal_static_buf_validate_EnumRules_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_buf_validate_EnumRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_EnumRules_descriptor,
        new java.lang.String[] { "Const", "DefinedOnly", "In", "NotIn", "Const", "DefinedOnly", });
    internal_static_buf_validate_RepeatedRules_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_buf_validate_RepeatedRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_RepeatedRules_descriptor,
        new java.lang.String[] { "MinItems", "MaxItems", "Unique", "Items", "MinItems", "MaxItems", "Unique", "Items", });
    internal_static_buf_validate_MapRules_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_buf_validate_MapRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_MapRules_descriptor,
        new java.lang.String[] { "MinPairs", "MaxPairs", "Keys", "Values", "MinPairs", "MaxPairs", "Keys", "Values", });
    internal_static_buf_validate_AnyRules_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_buf_validate_AnyRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_AnyRules_descriptor,
        new java.lang.String[] { "In", "NotIn", });
    internal_static_buf_validate_DurationRules_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_buf_validate_DurationRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_DurationRules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn", "Const", "Lt", "Lte", "Gt", "Gte", });
    internal_static_buf_validate_TimestampRules_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_buf_validate_TimestampRules_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buf_validate_TimestampRules_descriptor,
        new java.lang.String[] { "Const", "Lt", "Lte", "Gt", "Gte", "LtNow", "GtNow", "Within", "Const", "Lt", "Lte", "Gt", "Gte", "LtNow", "GtNow", "Within", });
    message.internalInit(descriptor.getExtensions().get(0));
    oneof.internalInit(descriptor.getExtensions().get(1));
    field.internalInit(descriptor.getExtensions().get(2));
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.priv.PrivateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    build.buf.validate.ExpressionProto.getDescriptor();
    build.buf.validate.priv.PrivateProto.getDescriptor();
    com.google.protobuf.DescriptorProtos.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
