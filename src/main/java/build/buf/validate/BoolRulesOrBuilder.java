// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: buf/validate/validate.proto
// Protobuf Java Version: 4.30.1

package build.buf.validate;

public interface BoolRulesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:buf.validate.BoolRules)
    com.google.protobuf.GeneratedMessage.
        ExtendableMessageOrBuilder<BoolRules> {

  /**
   * <pre>
   * `const` requires the field value to exactly match the specified boolean value.
   * If the field value doesn't match, an error message is generated.
   *
   * ```proto
   * message MyBool {
   * // value must equal true
   * bool value = 1 [(buf.validate.field).bool.const = true];
   * }
   * ```
   * </pre>
   *
   * <code>optional bool const = 1 [json_name = "const", (.buf.validate.predefined) = { ... }</code>
   * @return Whether the const field is set.
   */
  boolean hasConst();
  /**
   * <pre>
   * `const` requires the field value to exactly match the specified boolean value.
   * If the field value doesn't match, an error message is generated.
   *
   * ```proto
   * message MyBool {
   * // value must equal true
   * bool value = 1 [(buf.validate.field).bool.const = true];
   * }
   * ```
   * </pre>
   *
   * <code>optional bool const = 1 [json_name = "const", (.buf.validate.predefined) = { ... }</code>
   * @return The const.
   */
  boolean getConst();

  /**
   * <pre>
   * `example` specifies values that the field may have. These values SHOULD
   * conform to other constraints. `example` values will not impact validation
   * but may be used as helpful guidance on how to populate the given field.
   *
   * ```proto
   * message MyBool {
   * bool value = 1 [
   * (buf.validate.field).bool.example = 1,
   * (buf.validate.field).bool.example = 2
   * ];
   * }
   * ```
   * </pre>
   *
   * <code>repeated bool example = 2 [json_name = "example", (.buf.validate.predefined) = { ... }</code>
   * @return A list containing the example.
   */
  java.util.List<java.lang.Boolean> getExampleList();
  /**
   * <pre>
   * `example` specifies values that the field may have. These values SHOULD
   * conform to other constraints. `example` values will not impact validation
   * but may be used as helpful guidance on how to populate the given field.
   *
   * ```proto
   * message MyBool {
   * bool value = 1 [
   * (buf.validate.field).bool.example = 1,
   * (buf.validate.field).bool.example = 2
   * ];
   * }
   * ```
   * </pre>
   *
   * <code>repeated bool example = 2 [json_name = "example", (.buf.validate.predefined) = { ... }</code>
   * @return The count of example.
   */
  int getExampleCount();
  /**
   * <pre>
   * `example` specifies values that the field may have. These values SHOULD
   * conform to other constraints. `example` values will not impact validation
   * but may be used as helpful guidance on how to populate the given field.
   *
   * ```proto
   * message MyBool {
   * bool value = 1 [
   * (buf.validate.field).bool.example = 1,
   * (buf.validate.field).bool.example = 2
   * ];
   * }
   * ```
   * </pre>
   *
   * <code>repeated bool example = 2 [json_name = "example", (.buf.validate.predefined) = { ... }</code>
   * @param index The index of the element to return.
   * @return The example at the given index.
   */
  boolean getExample(int index);
}
