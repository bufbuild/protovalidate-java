// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buf/validate/validate.proto

package build.buf.validate;

public interface BoolRulesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:buf.validate.BoolRules)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *`const` requires the field value to exactly match the specified boolean value.
   *If the field value doesn't match, an error message is generated.
   *
   *```proto
   *message MyBool {
   *  // value must equal true
   *   bool value = 1 [(buf.validate.field).bool.const = true];
   *}
   *```
   * </pre>
   *
   * <code>optional bool const = 1 [json_name = "const", (.buf.validate.priv.field) = { ... }</code>
   * @return Whether the const field is set.
   */
  boolean hasConst();
  /**
   * <pre>
   *`const` requires the field value to exactly match the specified boolean value.
   *If the field value doesn't match, an error message is generated.
   *
   *```proto
   *message MyBool {
   *  // value must equal true
   *   bool value = 1 [(buf.validate.field).bool.const = true];
   *}
   *```
   * </pre>
   *
   * <code>optional bool const = 1 [json_name = "const", (.buf.validate.priv.field) = { ... }</code>
   * @return The const.
   */
  boolean getConst();
}
