// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buf/validate/conformance/cases/enums.proto

package build.buf.validate.conformance.cases;

public interface EnumInsideOneofOrBuilder extends
    // @@protoc_insertion_point(interface_extends:buf.validate.conformance.cases.EnumInsideOneof)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.buf.validate.conformance.cases.TestEnum val = 1 [json_name = "val", (.buf.validate.field) = { ... }</code>
   * @return Whether the val field is set.
   */
  boolean hasVal();
  /**
   * <code>.buf.validate.conformance.cases.TestEnum val = 1 [json_name = "val", (.buf.validate.field) = { ... }</code>
   * @return The enum numeric value on the wire for val.
   */
  int getValValue();
  /**
   * <code>.buf.validate.conformance.cases.TestEnum val = 1 [json_name = "val", (.buf.validate.field) = { ... }</code>
   * @return The val.
   */
  build.buf.validate.conformance.cases.TestEnum getVal();

  /**
   * <code>.buf.validate.conformance.cases.TestEnum val2 = 2 [json_name = "val2", (.buf.validate.field) = { ... }</code>
   * @return Whether the val2 field is set.
   */
  boolean hasVal2();
  /**
   * <code>.buf.validate.conformance.cases.TestEnum val2 = 2 [json_name = "val2", (.buf.validate.field) = { ... }</code>
   * @return The enum numeric value on the wire for val2.
   */
  int getVal2Value();
  /**
   * <code>.buf.validate.conformance.cases.TestEnum val2 = 2 [json_name = "val2", (.buf.validate.field) = { ... }</code>
   * @return The val2.
   */
  build.buf.validate.conformance.cases.TestEnum getVal2();

  build.buf.validate.conformance.cases.EnumInsideOneof.FooCase getFooCase();

  build.buf.validate.conformance.cases.EnumInsideOneof.BarCase getBarCase();
}
