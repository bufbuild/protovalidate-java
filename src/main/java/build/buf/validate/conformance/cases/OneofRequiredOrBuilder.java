// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buf/validate/conformance/cases/oneofs.proto

package build.buf.validate.conformance.cases;

public interface OneofRequiredOrBuilder extends
    // @@protoc_insertion_point(interface_extends:buf.validate.conformance.cases.OneofRequired)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string x = 1 [json_name = "x"];</code>
   * @return Whether the x field is set.
   */
  boolean hasX();
  /**
   * <code>string x = 1 [json_name = "x"];</code>
   * @return The x.
   */
  java.lang.String getX();
  /**
   * <code>string x = 1 [json_name = "x"];</code>
   * @return The bytes for x.
   */
  com.google.protobuf.ByteString
      getXBytes();

  /**
   * <code>int32 y = 2 [json_name = "y"];</code>
   * @return Whether the y field is set.
   */
  boolean hasY();
  /**
   * <code>int32 y = 2 [json_name = "y"];</code>
   * @return The y.
   */
  int getY();

  /**
   * <code>int32 name_with_underscores = 3 [json_name = "nameWithUnderscores"];</code>
   * @return Whether the nameWithUnderscores field is set.
   */
  boolean hasNameWithUnderscores();
  /**
   * <code>int32 name_with_underscores = 3 [json_name = "nameWithUnderscores"];</code>
   * @return The nameWithUnderscores.
   */
  int getNameWithUnderscores();

  /**
   * <code>int32 under_and_1_number = 4 [json_name = "underAnd1Number"];</code>
   * @return Whether the underAnd1Number field is set.
   */
  boolean hasUnderAnd1Number();
  /**
   * <code>int32 under_and_1_number = 4 [json_name = "underAnd1Number"];</code>
   * @return The underAnd1Number.
   */
  int getUnderAnd1Number();

  build.buf.validate.conformance.cases.OneofRequired.OCase getOCase();
}
