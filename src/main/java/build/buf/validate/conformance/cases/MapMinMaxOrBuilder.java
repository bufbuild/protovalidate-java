// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buf/validate/conformance/cases/maps.proto

package build.buf.validate.conformance.cases;

public interface MapMinMaxOrBuilder extends
    // @@protoc_insertion_point(interface_extends:buf.validate.conformance.cases.MapMinMax)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;string, bool&gt; val = 1 [json_name = "val", (.buf.validate.field) = { ... }</code>
   */
  int getValCount();
  /**
   * <code>map&lt;string, bool&gt; val = 1 [json_name = "val", (.buf.validate.field) = { ... }</code>
   */
  boolean containsVal(
      java.lang.String key);
  /**
   * Use {@link #getValMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Boolean>
  getVal();
  /**
   * <code>map&lt;string, bool&gt; val = 1 [json_name = "val", (.buf.validate.field) = { ... }</code>
   */
  java.util.Map<java.lang.String, java.lang.Boolean>
  getValMap();
  /**
   * <code>map&lt;string, bool&gt; val = 1 [json_name = "val", (.buf.validate.field) = { ... }</code>
   */
  boolean getValOrDefault(
      java.lang.String key,
      boolean defaultValue);
  /**
   * <code>map&lt;string, bool&gt; val = 1 [json_name = "val", (.buf.validate.field) = { ... }</code>
   */
  boolean getValOrThrow(
      java.lang.String key);
}
